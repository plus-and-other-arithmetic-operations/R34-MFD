[INCLUDE: common/custom_emissive.ini]

[DATA]
DISABLE_LIGHTSINI=1

[BASIC]
IS_LOW_BEAM_AVAILABLE=1

[WIPERS_TRACE...]
SURFACE = EXT_WINDOW,120.002
WIPERS = 100,101,98,97,EXT_REARWIPER.001,EXT_REARWIPER

[ODOMETER_MAIN]
DIGITAL_ITEM=1
DIGITAL_ITEM_NUMBER_FORMAT=06.
UPPER_BOUND=999999

-----------------PLATELIGHT------------------------

[EMISSIVE_LIGHT_...]
NAME=TAIL_PLATELIGHT
COLOR=255, 255, 255, 0.05
OFF_COLOR=0,0,0
CAST_LIGHT=1
LAG = 0.8
CHANNEL = 0

[LIGHT_LICENSEPLATE]
MESHES=PLATE_REAR
OFFSET=0.0, 0.02, -0.0
RANGE=0.5
RANGE_GRADIENT_OFFSET=0.15
SPOT=190
SPOT_SHARPNESS=0.02
COLOR=10,10,10,2
MIRROR=0, 0, 0
FALLBACK_EMISSIVE=2, 2 , 1.8, 3
; other supported values: TWO_ON_TOP, ONE_ON_TOP
LAYOUT=ONE_ON_TOP
FADE_AT=180
FADE_SMOOTH=1
ACTIVE=1
AFFECTS_TRACK=1

-----------------INTERIOR EXTRAS------------------------

[EMISSIVE_EXTRA_D_0]
NAME=INT_ROOFLIGHT_2
BIND_TO_EXTRA_D=1
COLOR=255,255,255,0.5
CAST_LIGHT=1
CLUSTER_THRESHOLD=0.01
LAG=0.7
LOCATION=CENTER
SIMULATE_HEATING=1
BIND_TO_HEADLIGHTS=0

[LIGHT_EXTRA_...]
BOUND_TO=INT_ROOFLIGHT_2
AMBIENT_INFLUENCE = 0.5
COLOR=255,255,255,0.05
DIFFUSE_CONCENTRATION=1.5
EXTERIOR_ONLY=0
INTERIOR_ONLY=0
AFFECTS_TRACK=1
SIMULATE_HEATING= 0.2
LAG=0.89
FADE_AT=100
FADE_SMOOTH=50
MIRROR=0.00, 0.0, 0
POSITION=0, 1.1, -0.15
DIRECTION=0, -1, 0
RANGE=1.15
RANGE_GRADIENT_OFFSET=0.9
SPECULAR_MULT=1.5
SPOT=130
SPOT_SHARPNESS=0.2

-----------------GAUGE EMISSIVES------------------------

[EMISSIVE_TURNSIGNAL_LEFT_...]
NAME=GAUGE_LEFT
COLOR=10,100,25, 1
LAG=0.2
SIMULATE_HEATING=0
LOCATION=FRONT
TOGGLE_VISIBILITY=1
CAST_LIGHT=1

[EMISSIVE_TURNSIGNAL_RIGHT_...]
NAME=GAUGE_RIGHT
COLOR=10,100,25, 1
LAG=0.2
SIMULATE_HEATING=0
LOCATION=FRONT
TOGGLE_VISIBILITY=1
CAST_LIGHT=1

[EMISSIVE_HANDBRAKE_...]
NAME=GAUGE_HANDBRAKE
COLOR=255,2,2,1
LAG=0
SIMULATE_HEATING=0
LOCATION=FRONT
TOGGLE_VISIBILITY=1
CAST_LIGHT=1

[EMISSIVE_HIGHBEAM_...]
BIND_TO_HEADLIGHTS=1
NAME=GAUGE_HIGHBEAM
COLOR = 0, 5, 25, 0.4
LAG=0.1
SIMULATE_HEATING=0
LOCATION=FRONT
CAST_LIGHT=1
CLUSTER_THRESHOLD=0.5
TOGGLE_VISIBILITY=1

[EMISSIVE_LIGHT_...]
NAME=GAUGE,INT_BUTTONS_SUB2
COLOR = 7,6,7, 0.5
OFF_COLOR = 0, 0, 0
LAG = 0
SIMULATE_HEATING = 0.0
LOCATION = NONE
ACT_AS_HEADLIGHTS =0
AMBIENT_INFLUENCE = 0.2

[EMISSIVE_LIGHT_...]
NAME=INT_CLOCKSCREEN
COLOR = 9,9,7, 0.2
OFF_COLOR = 0, 0, 0
LAG = 0
SIMULATE_HEATING = 0.0
LOCATION = NONE
ACT_AS_HEADLIGHTS =0
AMBIENT_INFLUENCE = 0.2

[EMISSIVE_LIGHT_...]
NAME=INT_MILES
COLOR = 19,22,255,0.01
LAG=0.5
OFF_COLOR=0,0,0
CAST_LIGHT=0
SIMULATE_HEATING=0.3

[EMISSIVE_LIGHT_...]
NAME=163, 161, 166, 159,167
COLOR = 25,5,5,0.2
LAG=0.5
OFF_COLOR=0,0,0
CAST_LIGHT=0
SIMULATE_HEATING=0.3

[EMISSIVE_EXTRA_A_...]
BIND_TO_EXTRA_A=1
NAME=GAUGE_FOG
COLOR=255,45,0,0.1
LAG=0
SIMULATE_HEATING=0
LOCATION=FRONT
TOGGLE_VISIBILITY=1
CAST_LIGHT=1

-----------------MISC EMISSIVES------------------------

[EMISSIVE_EXTRA_B_...]
BIND_TO_EXTRA_B=1
NAME=INT_ROOFLIGHT_1
COLOR=125,125,125,0.1
LAG=0
SIMULATE_HEATING=0
LOCATION=FRONT
TOGGLE_VISIBILITY=1
CAST_LIGHT=1

[LIGHT_EXTRA_...]
BIND_TO_EXTRA_B=1
AMBIENT_INFLUENCE = 0.8
COLOR=125,125,125,1
DIFFUSE_CONCENTRATION=0.8
EXTERIOR_ONLY=0
INTERIOR_ONLY=0
AFFECTS_TRACK=0
SIMULATE_HEATING= 0.2
LAG=0.89
FADE_AT=50
FADE_SMOOTH=20
MIRROR=0.45, 0.0, 0
POSITION=0.0005,1.18,-0.32
DIRECTION=-0.05, -0.05, 0.02
RANGE=1.5
RANGE_GRADIENT_OFFSET=-3.0
SPECULAR_MULT=0.2
SPOT=130
SPOT_SHARPNESS=0.3

;FOOT LIGHT
[LIGHT_EXTRA_...]
BIND_TO_HEADLIGHTS=1
LINE_FROM= -0.35, 0.85, 0.78
LINE_TO= -0.3, 0.85, 0.78
AMBIENT_INFLUENCE = 0.2
COLOR=200,200,255, 0.05
DIFFUSE_CONCENTRATION=1.5
EXTERIOR_ONLY=0
INTERIOR_ONLY=0
AFFECTS_TRACK=0
SIMULATE_HEATING= 0.2
LAG=0.89
FADE_AT=100
FADE_SMOOTH=50
MIRROR=0.00, 0.0, 0
POSITION=0, 1.23, 0.006
DIRECTION=0, -0.1, 0.025
RANGE=0.9
RANGE_GRADIENT_OFFSET=0.5
SPECULAR_MULT=0.3
SPOT=75
SPOT_SHARPNESS=0.5

;FOOT LIGHT 2
[LIGHT_EXTRA_...]
BIND_TO_HEADLIGHTS=1
LINE_FROM= 0.28, 0.77, 0.6
LINE_TO= 0.55, 0.77, 0.6
AMBIENT_INFLUENCE = 0.2
COLOR=200,200,255, 0.05
DIFFUSE_CONCENTRATION=1.5
EXTERIOR_ONLY=0
INTERIOR_ONLY=0
AFFECTS_TRACK=0
SIMULATE_HEATING= 0.2
LAG=0.89
FADE_AT=100
FADE_SMOOTH=50
MIRROR=0.00, 0.0, 0
POSITION=0, 1.23, 0.006
DIRECTION=0, -0.1, 0.025
RANGE=0.9
RANGE_GRADIENT_OFFSET=0.5
SPECULAR_MULT=0.3
SPOT=75
SPOT_SHARPNESS=0.5

-----------------GAUGE CASTED------------------------

[LIGHT_EXTRA_...]
BIND_TO_HEADLIGHTS=1
AMBIENT_INFLUENCE = 0.1
COLOR=255,255,255,0.1
DIFFUSE_CONCENTRATION=0.8
EXTERIOR_ONLY=0
INTERIOR_ONLY=0
AFFECTS_TRACK=0
SIMULATE_HEATING= 0.2
LAG=0.89
FADE_AT=90
FADE_SMOOTH=50
MIRROR=0, 0.0, 0
POSITION=-0.35, 0.73, 0.59
DIRECTION=-0, 0, -1
RANGE=0.3
RANGE_GRADIENT_OFFSET=0.00
SPECULAR_MULT=1
SPOT=180
SPOT_SHARPNESS=0.3

-----------------HDL EMISSIVES------------------------

[EMISSIVE_LIGHT_...]
NAME=EXT_HEADLIGHTNM1
COLOR = 7,7,9,0.4
LAG=0.5
LOCATION=FRONT
OFF_COLOR=0,0,0
SIMULATE_HEATING=0.3
CHANNEL=1

[EMISSIVE_LIGHT_...]
NAME=EXT_XENON
COLOR = 7,7,9,0.1
LAG=0.5
LOCATION=FRONT
SIMULATE_HEATING=0.3

[EMISSIVE_HIGHBEAM_...]
NAME=EXT_HEADLIGHTNM2
COLOR = 10,8,7,0.7
LAG=0.5
LOCATION=FRONT
OFF_COLOR=0,0,0
SIMULATE_HEATING=0.3

[EMISSIVE_HIGHBEAM_...]
NAME=EXT_VRAY.002
COLOR = 10,8,7,0.1
LAG=0.5
LOCATION=FRONT
OFF_COLOR=0,0,0
SIMULATE_HEATING=0.3
CHANNEL=0

[EMISSIVE_HIGHBEAM_...]
NAME=EXT_VRAY.004
COLOR = 10,8,7,5
LAG=0.5
LOCATION=FRONT
OFF_COLOR=0,0,0
SIMULATE_HEATING=0.3
CHANNEL=0

[EMISSIVE_LIGHT_...]
NAME=EXT_VRAY.002
COLOR = 7,7,9,1
LAG=0.5
LOCATION=FRONT
OFF_COLOR=0,0,0
SIMULATE_HEATING=0.3
CHANNEL=1

[EMISSIVE_LIGHT_...]
NAME=EXT_VRAY.004
COLOR = 7,7,9,15
LAG=0.5
LOCATION=FRONT
OFF_COLOR=0,0,0
SIMULATE_HEATING=0.3
CHANNEL=1

[EMISSIVE_LIGHT_...]
NAME=EXT_VRAY.002
COLOR = 7,7,9,1
LAG=0.5
LOCATION=FRONT
OFF_COLOR=0,0,0
SIMULATE_HEATING=0.3
CHANNEL=2

[EMISSIVE_LIGHT_...]
NAME=EXT_VRAY.004
COLOR = 7,7,7,8
LAG=0.5
LOCATION=FRONT
OFF_COLOR=0,0,0
SIMULATE_HEATING=0.3
CHANNEL=2

[EMISSIVE_LIGHT_...]
NAME=BULB_LOW
COLOR = 7,7,9,50
LAG=0.5
LOCATION=FRONT
OFF_COLOR=0,0,0

[EMISSIVE_HIGHBEAM_...]
NAME=BULB_HIGH
COLOR = 10,8,7,50
LAG=0.5
LOCATION=FRONT
OFF_COLOR=0,0,0

[EMISSIVE_LIGHT_...]
NAME=EXT_FFOG
COLOR = 10,10,10,10
LAG=0.5
OFF_COLOR=0,0,0
CAST_LIGHT=0
SIMULATE_HEATING=0.3

[EMISSIVE_LIGHT_...]
NAME=EXT_FFOG2
COLOR = 10,10,10,10
LAG=0.5
OFF_COLOR=0,0,0
CAST_LIGHT=0
SIMULATE_HEATING=0.3

[LIGHT_EXTRA_...]
BOUND_TO = BULB_LOW
AMBIENT_INFLUENCE = 0
COLOR=255,255,255,1
DIFFUSE_CONCENTRATION=0.8
EXTERIOR_ONLY=0
INTERIOR_ONLY=0
AFFECTS_TRACK=0
SIMULATE_HEATING= 0.2
LAG=0.89
FADE_AT=90
FADE_SMOOTH=50
MIRROR=0.619, 0, 0
POSITION=0, 0.515, 1.97
DIRECTION=0, 0, -1
RANGE=0.101
RANGE_GRADIENT_OFFSET=0.5
SPECULAR_MULT = 1
SPOT=180

[LIGHT_EXTRA_...]
BOUND_TO = BULB_LOW
AMBIENT_INFLUENCE = 0
COLOR=255,255,255,0.5
DIFFUSE_CONCENTRATION=0.8
EXTERIOR_ONLY=0
INTERIOR_ONLY=0
AFFECTS_TRACK=0
SIMULATE_HEATING= 0.2
LAG=0.89
FADE_AT=90
FADE_SMOOTH=50
MIRROR=0.62, 0, 0
POSITION=0, 0.513, 1.94
DIRECTION=0, 0, 1
RANGE=0.18
RANGE_GRADIENT_OFFSET=0.5
SPECULAR_MULT=2
SPOT=150

[LIGHT_EXTRA_...]
BOUND_TO = BULB_HIGH
AMBIENT_INFLUENCE = 0
COLOR=255,255,255,0.35
DIFFUSE_CONCENTRATION=0.8
EXTERIOR_ONLY=0
INTERIOR_ONLY=0
AFFECTS_TRACK=0
SIMULATE_HEATING= 0.2
LAG=0.89
FADE_AT=90
FADE_SMOOTH=50
MIRROR=0.472, 0, 0
POSITION=0, 0.521, 2.08
DIRECTION=0, 0, -1
RANGE=0.101
RANGE_GRADIENT_OFFSET=0.3
SPECULAR_MULT = 7
SPOT=150

[LIGHT_EXTRA_...]
BOUND_TO = BULB_HIGH
AMBIENT_INFLUENCE = 0
COLOR=255,255,255,0.15
DIFFUSE_CONCENTRATION=0.8
EXTERIOR_ONLY=0
INTERIOR_ONLY=0
AFFECTS_TRACK=0
SIMULATE_HEATING= 0.2
LAG=0.89
FADE_AT=90
FADE_SMOOTH=50
MIRROR=0.473, 0, 0
POSITION=0, 0.521, 2.01
DIRECTION=0, 0, 1
RANGE=0.22
RANGE_GRADIENT_OFFSET=0
SPECULAR_MULT = 2
SPOT=100

-----------------GLASS PBR ------------------------

[INCLUDE: common/materials_glass.ini]

[Material_Glass]
Materials = EXT_GLASS2
IOR = 2             ; looks better like this
FilmIOR = $IOR       ; redefine IOR for external film layer to increase reflections
ThicknessMult = 1  ; thicker glass passes less light through
ProfileFix = 0.04    ; adds thickness to glass for glazing angles
MaskPass = 2            ; mask pass opacity

[Material_Glass]
Materials = EXT_WINDOW
IOR = 2             ; looks better like this
FilmIOR = $IOR       ; redefine IOR for external film layer to increase reflections
ThicknessMult = 1  ; thicker glass passes less light through
ProfileFix = 0.04    ; adds thickness to glass for glazing angles
MaskPass = 2            ; mask pass opacity

[Material_Glass]
Materials = INT_GAUGEGLASS
IOR = 1.5
FilmIOR = $IOR
ThicknessMult = 1.5
ProfileFix = 0.04
MaskPass = 2

[Material_Glass]
Materials = INT_GLASS
IOR = 1.2
FilmIOR = $IOR
ThicknessMult = 3
ProfileFix = 0.04
MaskPass = 2

[Material_PhotoelasticGlass]
IOR = 2
FilmIOR = $IOR
Materials=EXT_GLASS2
PhotoelasticityMult = 0.5

[Material_Glass]
Meshes = 162, 161, 159, 160, 164, 163, 165, 166, 167
IOR = 1
ThicknessMult = 0.1
EXTRA_MASK_PASS = 1
EXTRA_MASK_PASS_OPACITY = 350
BrightnessAdjustment = 1.5
FresnelC = 0.2
Refraction = 0        ; set to non-zero value to use cheap refraction, increase value to increase light bending effect
RefractionBias = 0    ; increase to force use of refraction buffer everywhere and make refraction blurred, for matte glass or glass sides

-----------------PBR------------------------

[INCLUDE: common/materials_interior.ini]

;Plastic
[Material_Plastic_v2]
Meshes = EXT_PLASTIC
Metalness = 0.02
Reflectance = 0.02
BrightnessAdjustment = 0.2
ApplyTilingFix = 1
DetailScale = 0

;Plastic
[Material_Plastic_v2]
Materials = EXT_UNDERCARRIAGE
Metalness = 0.0
Reflectance = 0.0
BrightnessAdjustment = 0.0

;Black Body
[Material_Plastic_v2]
Materials = EXT_CARPAINT_BLACK
Metalness = 0.1
Reflectance = 0.02
BrightnessAdjustment = 0.05
DetailScale = 0

;Belt
[Material_Plastic_v2]
Meshes = INT_SEATBELT
Reflectance = 0.06
BrightnessAdjustment = 0.1
ApplyTilingFix = 1
DetailScale = 15

;Carbon
[Material_Carbon]
Materials = EXT_CARBON
DetailScale = 600
Brightness = 0.4
ClearCoatF0 = 0.3
CubemapReflectionBlur = 0,0

;Chrome
[Material_Metal_v2]
Materials = EXT_CHROME, EXT_CHROME2, EXT_EXHAUST, STR_NM, EXT_WHEELAO_CAP
Metalness = 1
BrightnessAdjustment = 0.3
DetailScale = 0
ApplyTilingFix = 1

;Fake Leather
[Material_Leather]
Meshes = INT_LEATHER
Reflectance = 0.01
DetailNormalBlend = 1
ColorSource = DIFFUSE
DetailNormalPBRSmoothnessGamma = 0.5
DetailTextureBlur = 1
Brightness = 0.8
DetailScale = 100

;Fake Leather
[Material_Leather]
Meshes =  INT_STEER_LEATHER
Reflectance = 0.01
DetailNormalBlend = 1
DetailNormalPBRSmoothnessGamma = 0.5
DetailTextureBlur = 1
Brightness = 0.3
DetailScale = 20

;STR NM
[Material_Plastic_v2]
Meshes = INT_STEER_BUTTON
Reflectance = 0.1
BrightnessAdjustment = 0.02

[Material_InteriorPBR]
Meshes = INT_DOTCLOTH
ColorSource = DIFFUSE
Metalness = 0.0
Reflectance = 0.03
Brightness = 1
DetailNormalBlend = 0.3
DetailScale = 800

[Material_InteriorPBR]
Meshes = INT_SEAT_CLOTH
ColorSource = DIFFUSE
Metalness = 0.0
Reflectance = 0.03
Brightness = 1
DetailNormalBlend = 0.3
DetailScale = 50

[Material_InteriorPBR]
Meshes = INT_SEAT_DIAMOND
ColorSource = DIFFUSE
Metalness = 0.0
Reflectance = 0.03
Brightness = 0.7
DetailNormalBlend = 0.5
DetailNormalPBRSecondaryColor = 50,100,50
DetailScale = 50

[Material_InteriorPBR]
Meshes = INT_CARPET
ColorSource = DIFFUSE
Metalness = 0.0
Reflectance = 0.002
Brightness = 0.5
DetailNormalBlend = 0.2
DetailScale = 100

[Material_InteriorPBR]
Meshes = INT_MAT
ColorSource = DIFFUSE
Metalness = 0.0
Reflectance = 0.002
Brightness = 5
DetailNormalBlend = 0.2
DetailScale = 50

[Material_Metal_v2]
Meshes = INT_STEER_CHROME
Metalness = 1
BrightnessAdjustment = 0.3
DetailScale = 0
ApplyTilingFix = 1

[Material_Metal_v2]
Meshes = INT_CHROME, INT_GEARS, INT_SEAT_CHROME
Metalness = 1
BrightnessAdjustment = 0.3
DetailScale = 0
ApplyTilingFix = 1

[Material_Metal_v2]
Meshes = INT_BUTTON_NM
Metalness = 0.6
Reflectance = 0.4
BrightnessAdjustment = 0.3
DetailScale = 0
ApplyTilingFix = 1

[Material_Metal_v2]
Meshes = INT_ALUMINIMUM
Metalness = 0.2
Reflectance = 0.2
BrightnessAdjustment = 0.2
DetailScale = 0

-----------------BRAKES------------------------

[BRAKEDISC_FX_FRONT]

ACTIVE = 1             ; set to 0 to disable the whole thing if car uses ksBrakeDisc shader for something else
CERAMIC = 0            ; use ceramic look
CARVED = 1             ; add a bit of carving, radial lines (fast for shader to compute)
CARVED_FREQUENCY = 20  ; increase to make more lines
GLOW_OFFSET = 0.3      ; increase to offset heated and worn center more to the center, decrease to offset it more to the outside area; with 0.5, it would be in the middle
WEAR_FORCE = 0.15

; Patch guesses holes from alpha-channel of txDiffuse. Holes don’t glow or reflect stuff and look dark:
ALPHA_MASK = 0.2, 2  ; hole is everything with alpha below 0.1, everything with alpha above 0.2 is not a hole, in-between is a transition

; Patch can also estimate deepenings based on luminance and normal texture. Deepenings glow with a delay (but fully heated, glow more) and are a bit occluded:
LUMINOCITY_MASK = 0.001, 0.2  ; everything darker than 0.01 is a deepening
NORMAL_MASK = 0.5, 0.0565       ; everything looking away more than 50% is a deepening

; Patch would try and guess size of brake disc and its inside area from its mesh, but if it fails:
DISC_RADIUS = 0.2           ; radius of a brake disc
DISC_INTERNAL_RADIUS = 0.1  ; radius of an inside part of a brake disc

; Another feature is that patch would mask reflections with rim, stopping brake disc from reflecting sky if looked at a angle. By default it would use rim radius and 60% of wheel width (for the distance between brake disc and exterior part) from “tyres.ini”, could be changed if needed:
RIM_RADIUS = 0.35  ; inside radius of a rim
RIM_HEIGHT = 0.2   ; distance between surface of brake disc and vertical surface of a wheel rim

[BRAKEDISC_FX_REAR]
ACTIVE = 1             ; set to 0 to disable the whole thing if car uses ksBrakeDisc shader for something else
CERAMIC = 0            ; use ceramic look
CARVED = 1             ; add a bit of carving, radial lines (fast for shader to compute)
CARVED_FREQUENCY = 20  ; increase to make more lines
GLOW_OFFSET = 0.3      ; increase to offset heated and worn center more to the center, decrease to offset it more to the outside area; with 0.5, it would be in the middle
WEAR_FORCE = 0.15
; Patch guesses holes from alpha-channel of txDiffuse. Holes don’t glow or reflect stuff and look dark:
ALPHA_MASK = 0.1, 2  ; hole is everything with alpha below 0.1, everything with alpha above 0.2 is not a hole, in-between is a transition

; Patch can also estimate deepenings based on luminance and normal texture. Deepenings glow with a delay (but fully heated, glow more) and are a bit occluded:
LUMINOCITY_MASK = 0.0001, 0.02  ; everything darker than 0.01 is a deepening
NORMAL_MASK = 0.5, 0.1        ; everything looking away more than 50% is a deepening

; Patch would try and guess size of brake disc and its inside area from its mesh, but if it fails:
DISC_RADIUS = 0.20           ; radius of a brake disc
DISC_INTERNAL_RADIUS = 0.1  ; radius of an inside part of a brake disc

; Another feature is that patch would mask reflections with rim, stopping brake disc from reflecting sky if looked at a angle. By default it would use rim radius and 60% of wheel width (for the distance between brake disc and exterior part) from “tyres.ini”, could be changed if needed:
RIM_RADIUS = 0.35  ; inside radius of a rim
RIM_HEIGHT = 0.2   ; distance between surface of brake disc and vertical surface of a wheel rim


[LIGHT_HEADLIGHT_0]
AFFECTS_TRACK=1
BOUND_EMISSIVE_MAX=500
BOUND_EXP=0.2
COLOR=7,7,9,0.5
DIFFUSE_CONCENTRATION=0.88
DIRECTION=0, 0.0, 1
EXTERIOR_ONLY=0
FADE_AT=450
FADE_SMOOTH=50
INTERIOR_ONLY=0
LOWBEAM_RANGE_MAX=190
LOWBEAM_RANGE_MULT=0.8
LOWBEAM_RANGE_ONCOMING_MULT=0.4
MIRROR=0.68526
MIRROR_DIRECTION=1
OFF_FADE_MULT=0.3
OFF_MIRROR=0.5
OFF_MULT=0
OFF_POSITION=0, 0.58216, 1.74877
OFF_RANGE_MULT=0.3
POPUP_ENABLED=1
POPUP_START=0.05
POPUP_END=0.7
POPUP_SECOND_SPOT_EXP=0.6
POPUP_SECOND_SPOT_INITIAL_VALUE=0.4
POPUP_EDGE_EXP=0.3
POPUP_EDGE_OFFSET=0.5
POSITION=0, 0.45, 1.99
RANGE=210
RANGE_GRADIENT_OFFSET=0
SECOND_SPOT=80
SECOND_SPOT_INTENSITY=1
SECOND_SPOT_RANGE=20
SECOND_SPOT_SHARPNESS=0.0
SECOND_SPOT_SKIP=0.0
SPECULAR_MULT=1
SPOT=65
SPOT_EDGE=0.0922464, 0.0919776, 0.09144
SPOT_EDGE_SHARPNESS=21.2
SPOT_SHARPNESS=0
SPOT_UP=0.02, 0.999847, 0

-----------------REFRACTIONS------------------------

;frontindicators
[EMISSIVE_TURNSIGNAL_LEFT_...]
NAME=EXT_BUMPERNM_GLASS
COLOR=35, 15, 0,1
LAG=0.7
SIMULATE_HEATING=0.0
LOCATION=FRONT
CHANNEL=3

[EMISSIVE_TURNSIGNAL_RIGHT_...]
NAME=EXT_BUMPERNM_GLASS
COLOR=35, 15, 0,1
LAG=0.7
SIMULATE_HEATING=0.0
LOCATION=FRONT
CHANNEL=4

[REFRACTING_HEADLIGHT_0]
SURFACE=EXT_BUMPERNM_GLASS
INSIDE=EXT_HOUSING

ABSORPTION = 0
AMBIENT_MULT = 2
BASE_EMISSIVE_K = 1
BOUNCED_BACK_MULT = 1
BULB_BLUR_K = 1
BULB_REFLECTION_K = 0
CUSTOM_BULB_0 = 0.000000,0.500000,0.017000,1.000000
CUSTOM_BULB_1 = 1.000000,0.500000,0.017000,1.000000
CUSTOM_BULB_2 = 0.000000,0.000000,0.000000,0.000000
CUSTOM_BULB_3 = 0.457000,0.521000,0.034000,0.000000
DIFFUSE_MAP_FILTER_MULT = 0.77
DIFFUSE_MAP_MULT = 0
DIRECTION = -0.080707,0.021033,-0.996516
DYNAMIC_EMISSIVE_MAP = 0
EMISSIVE_MULT = 4.95
EXTRA_GLASS_COLORIZATION = 1
EXTRA_SIDE_THICKNESS = 0
F0 = 1
GLASS_COLOR = 0.814832, 1, 0.849372
GLASS_EMISSIVE_MULT = 1
GLASS_EXTRA_THICKNESS = 0
INNER_SPECULAR = 2
INNER_SPECULAR_EXP = 505
IOR = 2.5
IOR_FLYOUT_FLAT = 0
LOD_BIAS = -0
MIRROR_2_AS_5 = 0
MIRROR_3_AS_4 = 1
MIRROR_DIR = 1.000920,0.000001,-0.000002
MIRROR_POS = -0.001338,0.282461,1.912100
NM_SHARE_EXT = 0.4
NM_SHARE_INT = 1
ORIGIN = 0.660794,0.335485,2.369750
RADIUS = 0.0872
REFLECTIVENESS_DIFFUSE_MULT = 1.3
REFLECTIVENESS_MULT = 1.9
REFLECTIVE_GAMMA = 2
REFRACTION_MASKING = 0
SIDE_FALLOFF = 0
USE_COLORED_BULBS = 1
USE_CUSTOM_BULBS = 1
USE_NORMAL_ALPHA = 1

RESOLUTION_MULT = 4

;sideindicators F
[EMISSIVE_TURNSIGNAL_LEFT_...]
NAME=EXT_SIDEBLINKER_NM
COLOR=30, 15, 0,1
LAG=0.7
SIMULATE_HEATING=0.0
LOCATION=FRONT
CHANNEL=3

[EMISSIVE_TURNSIGNAL_RIGHT_...]
NAME=EXT_SIDEBLINKER_NM
COLOR=30, 15, 0,1
LAG=0.7
SIMULATE_HEATING=0.0
LOCATION=FRONT
CHANNEL=4

[REFRACTING_HEADLIGHT_1]
SURFACE=EXT_SIDEBLINKER_NM
INSIDE=EXT_HOUSING,EXT_SIDEBLINKER_BULB

ABSORPTION = 0
AMBIENT_MULT = 1
BASE_EMISSIVE_K = 1
BOUNCED_BACK_MULT = 0.52
BULB_BLUR_K = 2.1
BULB_REFLECTION_K = 0.22
CUSTOM_BULB_0 = 0, 0.5, 0.043, 1
CUSTOM_BULB_1 = 1, 0.5, 0.034, 1
CUSTOM_BULB_2 = 0.5, 0.5, 0, 0
CUSTOM_BULB_3 = 0.486, 0.5, 0.086, 0
DIFFUSE_MAP_FILTER_MULT = 3.19
DIFFUSE_MAP_MULT = 0.17
DIRECTION = -0.997557, -0.00369012, 0.0697644
DYNAMIC_EMISSIVE_MAP = 0
EMISSIVE_MULT = 0.68
EXTRA_GLASS_COLORIZATION = 1
EXTRA_SIDE_THICKNESS = 27
F0 = 1
GLASS_COLOR = 1, 0.713273, 0.431382
GLASS_EMISSIVE_MULT = 1
GLASS_EXTRA_THICKNESS = 0.0194
INNER_SPECULAR = 20
INNER_SPECULAR_EXP = 636
IOR = 2.5
IOR_FLYOUT_FLAT = 0
LOD_BIAS = 0.1
MIRROR_2_AS_5 = 0
MIRROR_3_AS_4 = 1
MIRROR_DIR = 1, 8.32952e-07, 1.62721e-05
MIRROR_POS = -0.0012207, 0.582764, 0.855225
NM_SHARE_EXT = 1
NM_SHARE_INT = 1
ORIGIN = 0.91626, 0.582886, 0.850098
RADIUS = 0.0473284
REFLECTIVENESS_DIFFUSE_MULT = 23.5
REFLECTIVENESS_MULT = 3
REFLECTIVE_GAMMA = 0
REFRACTION_MASKING = 0
SIDE_FALLOFF = 1.48
USE_COLORED_BULBS = 1
USE_CUSTOM_BULBS = 1
USE_NORMAL_ALPHA = 1

RESOLUTION_MULT = 4

[EMISSIVE_TURNSIGNAL_LEFT_...]
NAME=EXT_TAILLIGHT_INDICATOR,EXT_TAILLIGHT_OUTERGLASS3
COLOR=35, 10, 2,0.5
LAG=0.7
SIMULATE_HEATING=0.0
LOCATION=REAR
CHANNEL=3

[EMISSIVE_TURNSIGNAL_RIGHT_...]
NAME=EXT_TAILLIGHT_INDICATOR,EXT_TAILLIGHT_OUTERGLASS3
COLOR=35, 10, 2,0.5
LAG=0.7
SIMULATE_HEATING=0.0
LOCATION=REAR
CHANNEL=4

[REFRACTING_HEADLIGHT_2]
SURFACE=EXT_TAILLIGHT_INDICATOR
INSIDE=EXT_HOUSING

ABSORPTION = 0
AMBIENT_MULT = 0
BASE_EMISSIVE_K = 0.23
BOUNCED_BACK_MULT = 0
BULB_BLUR_K = 2.2
BULB_REFLECTION_K = -0.04
CUSTOM_BULB_0 = 0.5, 0.543, 0, 0
CUSTOM_BULB_1 = 0.5, 0.543, 0, 0
CUSTOM_BULB_2 = 0.5, 0.5, 0, 0
CUSTOM_BULB_3 = 0.505, 0.538, 0.066, 0
DIFFUSE_MAP_FILTER_MULT = 53.26
DIFFUSE_MAP_MULT = 0.601
DIRECTION = -6.29704e-05, 2.09504e-05, 1
DYNAMIC_EMISSIVE_MAP = 0
EMISSIVE_MULT = 10.62
EXTRA_GLASS_COLORIZATION = 0
EXTRA_SIDE_THICKNESS = 0
F0 = 1
GLASS_COLOR = 1, 0.461658, 0
GLASS_EMISSIVE_MULT = 1
GLASS_EXTRA_THICKNESS = 0.04
INNER_SPECULAR = 9.8
INNER_SPECULAR_EXP = 460
IOR = 1.44
IOR_FLYOUT_FLAT = 1
LOD_BIAS = -0.5
MIRROR_2_AS_5 = 0
MIRROR_3_AS_4 = 1
MIRROR_DIR = 1.00081, 0.000515896, 0.0418531
MIRROR_POS = -0.0001688, 0.363776, -2.15922
NM_SHARE_EXT = 0
NM_SHARE_INT = 1
ORIGIN = 0.455164, 0.707798, -2.39142
RADIUS = 0.0523001
REFLECTIVENESS_DIFFUSE_MULT = 16.6
REFLECTIVENESS_MULT = 2.5
REFLECTIVE_GAMMA = 0
REFRACTION_MASKING = 0
SIDE_FALLOFF = 0
USE_COLORED_BULBS = 1
USE_CUSTOM_BULBS = 1
USE_NORMAL_ALPHA = 1

RESOLUTION_MULT = 4

[REFRACTING_HEADLIGHT_3]
SURFACE=EXT_TAILLIGHT_REFLECTOR
INSIDE=EXT_TAILLIGHT_REFRECT

ABSORPTION = 0
AMBIENT_MULT = 0.37
BASE_EMISSIVE_K = 0.09
BOUNCED_BACK_MULT = 0.48
BULB_BLUR_K = 2.2
BULB_REFLECTION_K = 1
CUSTOM_BULB_0 = 0.59, 0.377, 0, 0
CUSTOM_BULB_1 = 0.459, 0.533, 0, 0
CUSTOM_BULB_2 = 0.525, 0.746, 0, 0
CUSTOM_BULB_3 = 0.525, 0.213, 0, 0
DIFFUSE_MAP_FILTER_MULT = 5.96
DIFFUSE_MAP_MULT = 0
DIRECTION = -0.0879962, 0.0189655, 0.99594
DYNAMIC_EMISSIVE_MAP = 1
EMISSIVE_MULT = 3.62
EXTRA_GLASS_COLORIZATION = 1
EXTRA_SIDE_THICKNESS = 294
F0 = 0.8
GLASS_COLOR = 1, 0.228449, 0
GLASS_EMISSIVE_MULT = 1
GLASS_EXTRA_THICKNESS = 0.0037
INNER_SPECULAR = 3.9
INNER_SPECULAR_EXP = 800
IOR = 1
IOR_FLYOUT_FLAT = 0.7
LOD_BIAS = -0.2
MIRROR_2_AS_5 = 0
MIRROR_3_AS_4 = 1
MIRROR_DIR = 1.00355, 2.08475e-05, 3.77378e-05
MIRROR_POS = -0.000888348, 0.65509, -2.37465
NM_SHARE_EXT = 0
NM_SHARE_INT = 1
ORIGIN = 0.659348, 0.723332, -2.24294
RADIUS = 0.0754
RAYTRACE_STEP_INCREASE = 1.2
RAYTRACE_STEP_START = 0.15
REFLECTIVENESS_DIFFUSE_MULT = 15.4
REFLECTIVENESS_MULT = 3.7
REFLECTIVE_GAMMA = 0
REFRACTION_MASKING = 0
SIDE_FALLOFF = 0
USE_COLORED_BULBS = 1
USE_CUSTOM_BULBS = 1
USE_NORMAL_ALPHA = 1

RESOLUTION_MULT = 4

[EMISSIVE_BRAKE_...]
NAME = EXT_TAILLIGHT_OUTERGLASS
COLOR==255,110,0,0.075
FALLBACK_HEADLIGHTS_COLOR = 255,110,0,0.03
CAST_LIGHT=1
LAG=0.8
SIMULATE_HEATING=3
LOCATION=REAR
CHANNEL = 0

NAME = EXT_TAILLIGHT_OUTERGLASS
COLOR==255,110,0,0.055
FALLBACK_HEADLIGHTS_COLOR = 255,110,0,0.01
CAST_LIGHT=1
LAG=0.8
SIMULATE_HEATING=3
LOCATION=REAR
CHANNEL = 1

NAME = EXT_TAILLIGHT_OUTERGLASS
COLOR==255,110,0,0.055
FALLBACK_HEADLIGHTS_COLOR = 255,110,0,0.01
CAST_LIGHT=1
LAG=0.8
SIMULATE_HEATING=3
LOCATION=REAR
CHANNEL = 2

[REFRACTING_HEADLIGHT_4]
SURFACE = EXT_TAILLIGHT_OUTERGLASS
INSIDE = EXT_HOUSING

ABSORPTION = 0
AMBIENT_MULT = 0.31
BASE_EMISSIVE_K = 10
BOUNCED_BACK_MULT = 0.28
BULB_BLUR_K = 0.6
BULB_REFLECTION_K = 1
CUSTOM_BULB_0 = 0.37, 0.395, 0.037, 0.084
CUSTOM_BULB_1 = 0.37, 0.914, 0.012, 0.169
CUSTOM_BULB_2 = 0.383, 0.519, 0.062, 0.072
CUSTOM_BULB_3 = 0.469, 0.746, 0, 0.202
DIFFUSE_MAP_FILTER_MULT = 1.24
DIFFUSE_MAP_MULT = 1
DIRECTION = -0.276471, 0.0187911, 0.960838
DYNAMIC_EMISSIVE_MAP = 1
EMISSIVE_MULT = 0.83
EXTRA_GLASS_COLORIZATION = 1
EXTRA_SIDE_THICKNESS = 16
F0 = 0.8
GLASS_COLOR = 0.954952, 0.954863, 0.954857
GLASS_EMISSIVE_MULT = 0
GLASS_EXTRA_THICKNESS = 0
INNER_SPECULAR = 2.5
INNER_SPECULAR_EXP = 351
IOR = 1.75
IOR_FLYOUT_FLAT = 1
LOD_BIAS = -0.1
MIRROR_2_AS_5 = 0
MIRROR_3_AS_4 = 1
MIRROR_DIR = 1.00538, 3.37168e-05, 0.0080024
MIRROR_POS = 0.00463867, 0.654058, -3.07776
NM_SHARE_EXT = 1
NM_SHARE_INT = 1
ORIGIN = 0.790451, 0.723167, -2.75525
RADIUS = 0.1481
RAYTRACE_STEP_INCREASE = 1.2
RAYTRACE_STEP_START = 0.15
REFLECTIVENESS_DIFFUSE_MULT = 70.9
REFLECTIVENESS_MULT = 7.4
REFLECTIVE_GAMMA = 1.2
REFRACTION_MASKING = 0
SIDE_FALLOFF = 0.42
USE_COLORED_BULBS = 1
USE_CUSTOM_BULBS = 1
USE_NORMAL_ALPHA = 1

RESOLUTION_MULT = 4

[EMISSIVE_BRAKE_...]
NAME = EXT_TAILLIGHT_OUTERGLASS2_BRAKE.001
COLOR==25,18,0,0.035
FALLBACK_HEADLIGHTS_COLOR = 25,20,0,0.01
CAST_LIGHT=1
LAG=0.8
SIMULATE_HEATING=3
LOCATION=REAR
CHANNEL = 1

[REFRACTING_HEADLIGHT_5]
SURFACE = EXT_TAILLIGHT_OUTERGLASS2_BRAKE.001
INSIDE = EXT_HOUSING

ABSORPTION = 0
AMBIENT_MULT = 0.37
BASE_EMISSIVE_K = 5
BOUNCED_BACK_MULT = 0.48
BULB_BLUR_K = 1.3
BULB_REFLECTION_K = 1
CUSTOM_BULB_0 = 0.466, 0.147, 0.009, 0.127
CUSTOM_BULB_1 = 0.491, 0.466, 0.069, 0
CUSTOM_BULB_2 = 0.5, 1, 0.009, 0.127
CUSTOM_BULB_3 = 0.5, 0.827, 0, 0
DIFFUSE_MAP_FILTER_MULT = 1.28
DIFFUSE_MAP_MULT = 1
DIRECTION = -0.276415, 0.018822, 0.960863
DYNAMIC_EMISSIVE_MAP = 1
EMISSIVE_MULT = 9.48
EXTRA_GLASS_COLORIZATION = 1
EXTRA_SIDE_THICKNESS = 294
F0 = 0.8
GLASS_COLOR = 1, 0.9999, 0.999915
GLASS_EMISSIVE_MULT = 1
GLASS_EXTRA_THICKNESS = 0.0038
INNER_SPECULAR = 3.9
INNER_SPECULAR_EXP = 800
IOR = 1.65
IOR_FLYOUT_FLAT = 1
LOD_BIAS = -0.2
MIRROR_2_AS_5 = 0
MIRROR_3_AS_4 = 1
MIRROR_DIR = 1.00307, 1.77907e-05, 4.72665e-05
MIRROR_POS = -0.000874043, 0.655077, -2.37435
NM_SHARE_EXT = 0
NM_SHARE_INT = 1
ORIGIN = 0.676112, 0.723245, -2.24225
RADIUS = 0.1119
RAYTRACE_STEP_INCREASE = 1.2
RAYTRACE_STEP_START = 0.15
REFLECTIVENESS_DIFFUSE_MULT = 15.4
REFLECTIVENESS_MULT = 3.7
REFLECTIVE_GAMMA = 1.2
REFRACTION_MASKING = 0
SIDE_FALLOFF = 0
USE_COLORED_BULBS = 1
USE_CUSTOM_BULBS = 1
USE_NORMAL_ALPHA = 1

RESOLUTION_MULT = 4

[EMISSIVE_BRAKE_...]
NAME = EXT_MIDDLEBRAKELIGHT_GLASS
COLOR==255,180,0,0.075
CAST_LIGHT=1
LAG=0.8
SIMULATE_HEATING=3
LOCATION=REAR
CHANNEL = 1

[REFRACTING_HEADLIGHT_6]
SURFACE = EXT_MIDDLEBRAKELIGHT_GLASS
INSIDE = EXT_HOUSING

ABSORPTION = 0
AMBIENT_MULT = 1
BASE_EMISSIVE_K = 1
BOUNCED_BACK_MULT = 0
BULB_BLUR_K = 4
BULB_REFLECTION_K = 1
CUSTOM_BULB_0 = 1, 0.5, 0.095, 1
CUSTOM_BULB_1 = 0.5, 0.448, 0.016, 0
CUSTOM_BULB_2 = 0, 0.5, 0.098, 0.621
CUSTOM_BULB_3 = 0, 0.5, 0, 1
DIFFUSE_MAP_FILTER_MULT = 10
DIFFUSE_MAP_MULT = 0
DIRECTION = 0.00786437, -0.0329543, 0.999426
DYNAMIC_EMISSIVE_MAP = 0
EMISSIVE_MULT = 4.32
EXTRA_GLASS_COLORIZATION = 0
EXTRA_SIDE_THICKNESS = 0
F0 = 1
GLASS_COLOR = 0.972298, 0.0674068, 0
GLASS_EMISSIVE_MULT = 1
GLASS_EXTRA_THICKNESS = 0.04
INNER_SPECULAR = 1
INNER_SPECULAR_EXP = 430
IOR = 1.41
IOR_FLYOUT_FLAT = 0
LOD_BIAS = -0.5
MIRROR_2_AS_5 = 1
MIRROR_3_AS_4 = 1
MIRROR_DIR = 1.00199, -0.0151981, -0.00222355
MIRROR_POS = 0.0030036, 0.757258, -0.225696
NM_SHARE_EXT = 0
NM_SHARE_INT = 1
ORIGIN = -0.00208235, 0.821704, -2.21524
RADIUS = 0.1168
REFLECTIVENESS_DIFFUSE_MULT = 12.9
REFLECTIVENESS_MULT = 2.8
REFLECTIVE_GAMMA = 0
REFRACTION_MASKING = 0
SIDE_FALLOFF = 0
USE_COLORED_BULBS = 1
USE_CUSTOM_BULBS = 1
USE_NORMAL_ALPHA = 1

RESOLUTION_MULT = 4

[EMISSIVE_LIGHT_...]
NAME = EXT_TAILLIGHT_OUTERGLASS1
COLOR==25,18,0,0.75
FALLBACK_HEADLIGHTS_COLOR = 25,20,0,0.3
CAST_LIGHT=1
LAG=0.8
SIMULATE_HEATING=3
LOCATION=REAR
CHANNEL = 1

[REFRACTING_HEADLIGHT_7]
SURFACE = EXT_TAILLIGHT_OUTERGLASS1
INSIDE = EXT_HOUSING

ABSORPTION = 0
AMBIENT_MULT = 0.31
BASE_EMISSIVE_K = 10
BOUNCED_BACK_MULT = 0.28
BULB_BLUR_K = 0.7
BULB_REFLECTION_K = 1
CUSTOM_BULB_0 = 0.407, 0.346, 0.037, 0.145
CUSTOM_BULB_1 = 0.383, 0.494, 0.037, 0.036
CUSTOM_BULB_2 = 0.407, 0.667, 0.025, 0.193
CUSTOM_BULB_3 = 0.444, 0.667, 0, 1
DIFFUSE_MAP_FILTER_MULT = 1.41
DIFFUSE_MAP_MULT = 1
DIRECTION = -0.276404, 0.0188055, 0.960858
DYNAMIC_EMISSIVE_MAP = 1
EMISSIVE_MULT = 0.43
EXTRA_GLASS_COLORIZATION = 0
EXTRA_SIDE_THICKNESS = 16
F0 = 0.76
GLASS_COLOR = 1, 0.9999, 0.999915
GLASS_EMISSIVE_MULT = 0.08
GLASS_EXTRA_THICKNESS = 0
INNER_SPECULAR = 2.5
INNER_SPECULAR_EXP = 351
IOR = 1.68
IOR_FLYOUT_FLAT = 1
LOD_BIAS = -0.1
MIRROR_2_AS_5 = 0
MIRROR_3_AS_4 = 1
MIRROR_DIR = 1.00427, 2.73254e-05, 5.46547e-05
MIRROR_POS = -0.000716686, 0.654886, -2.37388
NM_SHARE_EXT = 1
NM_SHARE_INT = 1
ORIGIN = 0.455163, 0.703209, -2.24709
RADIUS = 0.1119
RAYTRACE_STEP_INCREASE = 1.2
RAYTRACE_STEP_START = 0.15
REFLECTIVENESS_DIFFUSE_MULT = 70.9
REFLECTIVENESS_MULT = 7.4
REFLECTIVE_GAMMA = 1.3
REFRACTION_MASKING = 0
SIDE_FALLOFF = 0
USE_COLORED_BULBS = 1
USE_CUSTOM_BULBS = 1
USE_NORMAL_ALPHA = 1

RESOLUTION_MULT = 4

[EMISSIVE_LIGHT_...]
NAME = EXT_TAILLIGHT_OUTERGLASS2.002
COLOR=25,18,0,0.75
FALLBACK_HEADLIGHTS_COLOR = 25,20,0,0.3
CAST_LIGHT=1
LAG=0.8
SIMULATE_HEATING=3
LOCATION=REAR
CHANNEL = 1

[REFRACTING_HEADLIGHT_8]
SURFACE = EXT_TAILLIGHT_OUTERGLASS2.002
INSIDE = EXT_HOUSING

ABSORPTION = 0
AMBIENT_MULT = 0.37
BASE_EMISSIVE_K = 10
BOUNCED_BACK_MULT = 0.48
BULB_BLUR_K = 3.2
BULB_REFLECTION_K = 1
CUSTOM_BULB_0 = 0.469, 0.309, 0.049, 0.229
CUSTOM_BULB_1 = 0.459, 0.533, 0.049, 0
CUSTOM_BULB_2 = 0.457, 0.778, 0.049, 0.108
CUSTOM_BULB_3 = 0.525, 0.213, 0, 0
DIFFUSE_MAP_FILTER_MULT = 1.3
DIFFUSE_MAP_MULT = 1
DIRECTION = -0.174484, 0.0189188, 0.984478
DYNAMIC_EMISSIVE_MAP = 1
EMISSIVE_MULT = 0.2
EXTRA_GLASS_COLORIZATION = 1
EXTRA_SIDE_THICKNESS = 294
F0 = 0.8
GLASS_COLOR = 1, 0.9999, 0.999915
GLASS_EMISSIVE_MULT = 1
GLASS_EXTRA_THICKNESS = 0.0037
INNER_SPECULAR = 3.9
INNER_SPECULAR_EXP = 800
IOR = 1.65
IOR_FLYOUT_FLAT = 0.74
LOD_BIAS = -0.2
MIRROR_2_AS_5 = 0
MIRROR_3_AS_4 = 1
MIRROR_DIR = 1.00365, 2.16213e-05, 2.57295e-05
MIRROR_POS = -0.000849247, 0.655056, -2.37509
NM_SHARE_EXT = 0
NM_SHARE_INT = 1
ORIGIN = 0.456438, 0.706579, -2.24781
RADIUS = 0.0825
RAYTRACE_STEP_INCREASE = 1.2
RAYTRACE_STEP_START = 0.15
REFLECTIVENESS_DIFFUSE_MULT = 15.4
REFLECTIVENESS_MULT = 3.7
REFLECTIVE_GAMMA = 1.3
REFRACTION_MASKING = 0
SIDE_FALLOFF = 0.4
USE_COLORED_BULBS = 1
USE_CUSTOM_BULBS = 1
USE_NORMAL_ALPHA = 1

RESOLUTION_MULT = 4

[REFRACTING_HEADLIGHT_9]
SURFACE = EXT_FFOG, EXT_FFOG2
INSIDE = EXT_HDL_CHROME, EXT_FFOG_BULB, EXT_HDL_PLASTIC

ABSORPTION = 0
AMBIENT_MULT = 1
BASE_EMISSIVE_K = 1
BOUNCED_BACK_MULT = 0
BULB_BLUR_K = 2.4
BULB_REFLECTION_K = 0.35
CUSTOM_BULB_0 = 0.457, 0.44, 0.103, 0
CUSTOM_BULB_1 = 0.44, 0.414, 0.345, 0
CUSTOM_BULB_2 = 0.5, 0.5, 0, 0
CUSTOM_BULB_3 = 0.5, 0.5, 0, 0
DIFFUSE_MAP_FILTER_MULT = 0
DIFFUSE_MAP_MULT = 0
DIRECTION = 0.0104003, -0.0280418, -0.999553
DYNAMIC_EMISSIVE_MAP = 0
EMISSIVE_MULT = 0.5
EXTRA_GLASS_COLORIZATION = 1
EXTRA_SIDE_THICKNESS = 0
F0 = 1
GLASS_COLOR = 1, 0.999955, 0.9999
GLASS_EMISSIVE_MULT = 1
GLASS_EXTRA_THICKNESS = 0.004
INNER_SPECULAR = 20
INNER_SPECULAR_EXP = 1000
IOR = 1.15
IOR_FLYOUT_FLAT = 0
LOD_BIAS = -0.5
MIRROR_2_AS_5 = 1
MIRROR_3_AS_4 = 1
MIRROR_DIR = 1.00099, 5.58945e-06, 7.03037e-05
MIRROR_POS = -0.00123215, 0.738056, -2.32595
NM_SHARE_EXT = 0.63
NM_SHARE_INT = 1
ORIGIN = 0.715933, 0.541622, 2.11536
RADIUS = 0.0393
REFLECTIVENESS_DIFFUSE_MULT = 100
REFLECTIVENESS_MULT = 10
REFLECTIVE_GAMMA = 0
REFRACTION_MASKING = 0
SIDE_FALLOFF = 1.09
USE_COLORED_BULBS = 1
USE_CUSTOM_BULBS = 1
USE_NORMAL_ALPHA = 1

RESOLUTION_MULT = 4

[LIGHT_BRAKE_0]
AFFECTS_TRACK=1
BOUND_EMISSIVE_MAX=500
BOUND_EXP=1
COLOR=1, 0, 0, 4
DIFFUSE_CONCENTRATION=0.88
DIRECTION=0, 0, -1
EXTERIOR_ONLY=1
FADE_AT=120
FADE_SMOOTH=30
INTERIOR_ONLY=0
MIRROR=0.480602
MIRROR_DIRECTION=0
NO_SELF_SPECULAR=1
OFF_COLOR=1, 0.0478983, 0, 2
OFF_FADE_MULT=0.764696
OFF_MIRROR=0.499414
OFF_MULT=0.1
OFF_POSITION=0, 0.1, -1.9604
OFF_RANGE_MULT=0.831926
POSITION=0, 0.1, -1.9604
RANGE=5
RANGE_GRADIENT_OFFSET=0.275
SINGLE_FREQUENCY=0
SPECULAR_MULT=1
SPOT=160
SPOT_EDGE=0.406, 0.406, 0.406
SPOT_EDGE_SHARPNESS=10
SPOT_SHARPNESS=0.3675

[EMISSIVE_REVERSE_...]
NAME=EXT_REVERSE_GLASS
COLOR=26, 26, 26,0.1
LAG=0.7
SIMULATE_HEATING=3
CAST_LIGHT=1
CHANNEL = 0

[REFRACTING_HEADLIGHT_11]
SURFACE=EXT_REVERSE_GLASS
INSIDE=EXT_HOUSING

ABSORPTION = 0
AMBIENT_MULT = 5
BASE_EMISSIVE_K = 1
BOUNCED_BACK_MULT = 0
BULB_BLUR_K = 2
BULB_REFLECTION_K = -0
CUSTOM_BULB_0 = 0.426000,0.434000,0.098000,0.000000
CUSTOM_BULB_1 = 0.000000,0.500000,0.008000,1.000000
CUSTOM_BULB_2 = 1.000000,0.500000,0.148000,1.000000
CUSTOM_BULB_3 = 0.000000,0.000000,0.000000,0.000000
DIFFUSE_MAP_FILTER_MULT = 0
DIFFUSE_MAP_MULT = 0
DIRECTION = -0.001673,0.007906,0.999967
DYNAMIC_EMISSIVE_MAP = 0
EMISSIVE_MULT = 1.58
EXTRA_GLASS_COLORIZATION = 1
EXTRA_SIDE_THICKNESS = 0
F0 = 1
GLASS_COLOR = 0.895971, 0.876455, 0.850802
GLASS_EMISSIVE_MULT = 1
GLASS_EXTRA_THICKNESS = 0
INNER_SPECULAR = 0.5
INNER_SPECULAR_EXP = 463
IOR = 2.5
IOR_FLYOUT_FLAT = 0
LOD_BIAS = -0.5
MIRROR_2_AS_5 = 0
MIRROR_3_AS_4 = 1
MIRROR_DIR = 1.000090,0.000002,0.000014
MIRROR_POS = -0.002087,0.391552,-2.056100
NM_SHARE_EXT = 0
NM_SHARE_INT = 0.5
ORIGIN = 0.259066,0.411174,-2.346260
RADIUS = 0.0677
REFLECTIVENESS_DIFFUSE_MULT = 2.5
REFLECTIVENESS_MULT = 2
REFLECTIVE_GAMMA = 3
REFRACTION_MASKING = 0
SIDE_FALLOFF = 0
USE_COLORED_BULBS = 1
USE_CUSTOM_BULBS = 1
USE_NORMAL_ALPHA = 1

RESOLUTION_MULT = 4

[EMISSIVE_EXTRA_A_...]
BIND_TO_EXTRA_A=1
BIND_TO_HEADLIGHTS=0
NAME=EXT_FOGLIGHT_GLASS
COLOR==255,110,0,0.02
LAG=0.5
SIMULATE_HEATING=0
LOCATION=FRONT
CAST_LIGHT=1
CLUSTER_THRESHOLD=0.5

[REFRACTING_HEADLIGHT_12]
SURFACE = EXT_FOGLIGHT_GLASS
INSIDE = EXT_HOUSING

ABSORPTION = 0
AMBIENT_MULT = 5
BASE_EMISSIVE_K = 1
BOUNCED_BACK_MULT = 0
BULB_BLUR_K = 2
BULB_REFLECTION_K = -0
CUSTOM_BULB_0 = 0.426000,0.434000,0.098000,0.000000
CUSTOM_BULB_1 = 0.000000,0.500000,0.008000,1.000000
CUSTOM_BULB_2 = 1.000000,0.500000,0.148000,1.000000
CUSTOM_BULB_3 = 0.000000,0.000000,0.000000,0.000000
DIFFUSE_MAP_FILTER_MULT = 10
DIFFUSE_MAP_MULT = 0
DIRECTION = -0.001673,0.007906,0.999982
DYNAMIC_EMISSIVE_MAP = 0
EMISSIVE_MULT = 1.58
EXTRA_GLASS_COLORIZATION = 1
EXTRA_SIDE_THICKNESS = 0
F0 = 1
GLASS_COLOR = 1, 0, 0.021699
GLASS_EMISSIVE_MULT = 1
GLASS_EXTRA_THICKNESS = 0
INNER_SPECULAR = 0.5
INNER_SPECULAR_EXP = 463
IOR = 2.5
IOR_FLYOUT_FLAT = 0
LOD_BIAS = -0.5
MIRROR_2_AS_5 = 0
MIRROR_3_AS_4 = 1
MIRROR_DIR = 0.999998,0.000002,0.000014
MIRROR_POS = -0.001889,0.391538,-2.055069
NM_SHARE_EXT = 0
NM_SHARE_INT = 0.5
ORIGIN = -0.284431,0.411052,-2.348156
RADIUS = 0.0677
REFLECTIVENESS_DIFFUSE_MULT = 2.5
REFLECTIVENESS_MULT = 2
REFLECTIVE_GAMMA = 3
REFRACTION_MASKING = 0
SIDE_FALLOFF = 0
USE_COLORED_BULBS = 1
USE_CUSTOM_BULBS = 1
USE_NORMAL_ALPHA = 1

RESOLUTION_MULT = 4

[AUDIO_PROPERTIES]
TURBO_THROTTLE=1

-----------------WING ADJUSTMENT------------------------

[ADJUSTABLE_WING_0]
NAME=WING  ; name of wing root node to rotate
WING=3          ; index of section in aero.ini
ANGLE_BASE=0    ; base offset for angle
ANGLE_MULT=0.75  ; angle multiplier
DEBUG_MODE=0    ; set to 1 to adjust PIVOT easier
ROTATION_PIVOT=0, 0.00, 0.00  ; rotation pivot relative to wing root node, should be at the center of wing mesh
ROTATION_AXIS=-1, 0, 0        ; I’m pretty sure in most cases, this value wouldn’t be changed, but just in case

[ANALOG_INDICATOR_1]
INPUT=SPEED_WHEELS
OBJECT_NAME=ARROW_SPEED
ZERO=0.1
STEP=0.7

[SHADOWED_WHEELS_FRONT]
AFFECT_SUSP_NODES=1
ANGLE_X=0
BOUND_TO_SUSPENSION=0
DISTANCE=3
EXTRA_AMBIENT_BRIGHTNESS=0.04
OFFSET=0.04
WIDTH=0.1

[SHADOWED_WHEELS_REAR]
AFFECT_SUSP_NODES=1
ANGLE_X=0
BOUND_TO_SUSPENSION=0
DISTANCE=3
EXTRA_AMBIENT_BRIGHTNESS=0.04
OFFSET=0.04
WIDTH=0.1

[SMART_MIRROR]
DISABLE=1

[TYRES_FX_FRONT]
COOKTORRANCE_FRESNEL_REFLECTANCE=0.2
COOKTORRANCE_IOR=0.1
COOKTORRANCE_LAMBERT_FACTOR=5
COOKTORRANCE_ROUGHNESS=0.5
DAMAGE_FLAT_SPOT_DEBUG=0
DAMAGE_FLAT_SPOT_FADE=0.1
DAMAGE_FLAT_SPOT_GAIN=10
DAMAGE_GRAIN_DEBUG=0
DAMAGE_GRAIN_GAIN=10
DAMAGE_GRAIN_MAX=0.8
DAMAGE_NORMALS_MULT=2
DAMAGE_OCCLUSION_MULT=0.2
DAMAGE_OFFSET_K=0
DAMAGE_REFL_MULT=0.8
DAMAGE_SPEC_EXP_MULT=0.2
DAMAGE_SPEC_MULT=0.6
DAMAGE_WIDTH_K=1.2
DIRT_ACCUMULATION=10000
DIRT_FADE=100
ENABLED=1
FLEX_MAX_SKEW_MULT=0.8
FLEX_MULT=1
FLEX_PROFILE_MULT=0.45
FLEX_SKEW_RANGE_MULT=3
FLEX_SKEW_SMOOTHING=0.1
FLEX_SQUASH_SMOOTHING=0.1
NOFX_DISTANCE_SWITCH=20
VISIBLE_IN_INTERIOR_CAM=0

[TYRES_FX_REAR]
COOKTORRANCE_FRESNEL_REFLECTANCE=0.2
COOKTORRANCE_IOR=0.1
COOKTORRANCE_LAMBERT_FACTOR=5
COOKTORRANCE_ROUGHNESS=0.5
DAMAGE_FLAT_SPOT_DEBUG=0
DAMAGE_FLAT_SPOT_FADE=0.1
DAMAGE_FLAT_SPOT_GAIN=10
DAMAGE_GRAIN_DEBUG=0
DAMAGE_GRAIN_GAIN=10
DAMAGE_GRAIN_MAX=0.8
DAMAGE_NORMALS_MULT=2
DAMAGE_OCCLUSION_MULT=0.2
DAMAGE_OFFSET_K=0
DAMAGE_REFL_MULT=0.8
DAMAGE_SPEC_EXP_MULT=0.2
DAMAGE_SPEC_MULT=0.6
DAMAGE_WIDTH_K=1.2
DIRT_ACCUMULATION=10000
DIRT_FADE=100
ENABLED=1
FLEX_MAX_SKEW_MULT=0.8
FLEX_MULT=1
FLEX_PROFILE_MULT=0.45
FLEX_SKEW_RANGE_MULT=3
FLEX_SKEW_SMOOTHING=0.1
FLEX_SQUASH_SMOOTHING=0.1
NOFX_DISTANCE_SWITCH=20
VISIBLE_IN_INTERIOR_CAM=0

-------------- ANIMATIONS --------------

[ANIMATION_1]
INPUT = TURNSIGNAL_LEFT
FILE = lever_left.ksanim
TIME = 1
INPUT_AS_PROGRESS = 0
LOOP_WHILE_ACTIVE = 0

[ANIMATION_2]
INPUT = TURNSIGNAL_RIGHT
FILE = lever_right.ksanim
TIME = 1
INPUT_AS_PROGRESS = 0
LOOP_WHILE_ACTIVE = 0

[ANIMATION_3]
INPUT = EXTRA_C
FILE = mirror.ksanim
TIME = 5
INPUT_AS_PROGRESS = 0
LOOP_WHILE_ACTIVE = 0


[MODEL_REPLACEMENT_...] ;Hiding everything that would interfere with the display
ACTIVE=$" read('csp/version', 0) >= 1709 "
FILE=?.kn5
HIDE=boost,oil

;[SHADER_REPLACEMENT_...]
;ACTIVE= $" read('csp/version', 0) >= 1709 "
;MATERIALS = INT_SCREEN
;RESOURCE_0 = txDiffuse
;RESOURCE_COLOR_0 = 0.1, 0.1, 0.1

[SCRIPTABLE_DISPLAY_...]
ACTIVE= $" read('csp/version', 0) >= 1709 "
MESHES = INT_SCREEN
RESOLUTION = 1024,512
DISPLAY_POS = 10,20   
DISPLAY_SIZE = 940, 490
SKIP_FRAMES = 0
SCRIPT = '

function drawMenuBars(basex, basey, sizex, sizey)
    display.rect{pos= vec2(basex,basey), size= vec2(sizex,sizey), color= rgbm(1,1,1,1)}
    display.rect{pos= vec2(basex+5,basey+5), size= vec2(sizex-10,sizey-10), color= rgbm(0,0.01,0.09,1)}
    display.rect{pos= vec2(basex+215,basey), size= vec2(sizex-440,sizey), color= rgbm(1,1,1,1)}
    display.rect{pos= vec2(basex+220,basey+5), size= vec2(sizex-450,sizey-10), color= rgbm(0,0.01,0.09,1)}
    display.rect{pos= vec2(basex+215,basey), size= vec2(sizex-730,sizey), color= rgbm(1,1,1,1)}
    display.rect{pos= vec2(basex+220,basey+5), size= vec2(sizex-740,sizey-10), color= rgbm(0,0.01,0.09,1)}
   
end

function drawBarMenuText(starterx)
    display.text{pos = vec2(starterx, 60), letter = vec2(45, 35), spacing = -23,text = "BOOST", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(starterx, 120), letter = vec2(45, 35), spacing = -25,text = "THROTTLE", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(starterx-5, 180), letter = vec2(45, 35), spacing = -25,text = "INJECTOR", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(starterx, 240), letter = vec2(45, 35), spacing = -21,text = "OIL-TEMP", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(starterx+5, 300), letter = vec2(45, 35), spacing = -21,text = "W-TEMP", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(starterx, 360), letter = vec2(45, 35), spacing = -21,text = "EXH-TEMP", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(starterx, 420), letter = vec2(45, 35), spacing = -21,text = "INT-TEMP", font = "Microsquare", color= rgbm(1,1,1,1)}
end

function idcLevel(rpm)
    return math.saturate(rpm/8000)*100-10 --find accurate equation

end

local maxBoost = -2
local maxOilTemp = 70
local maxWaterTemp = 0
local maxExhTemp = 0
local maxIntTemp = 0
local maxVoltage = 8


local boostThreshold = 1
local throttleTreshold = 75
local idcTreshold = 75
local oilTreshold = 120
local waterTreshold = 120
local exhTreshold = 875
local intTreshold = 50

function getBarColor(currentval,treshold)
    if currentval < treshold then
        return rgbm(0,1,0,1)
    else 
        return rgbm(1,0,0,1)
    end
end

function drawBarMenuGreenBars()

    --boost bar--
    
    displayedPressure = (car.turboBoost+0.3)*10
    maxBoost = math.max(maxBoost,displayedPressure)
    
    display.horizontalBar{pos= vec2(410,55), size= vec2(285,45), delta=0, activeColor= rgbm(1,1,1,1), inactiveColor= rgbm(0,0,0,0), total=15, active=maxBoost}
    display.horizontalBar{pos= vec2(405 ,55), size= vec2(285,45), delta=0, activeColor=rgbm(0,0.01,0.09,1), inactiveColor= rgbm(0,0,0,0), total=15, active=maxBoost}
    display.horizontalBar{pos= vec2(405,55), size= vec2(285,45), delta=0, activeColor= getBarColor(2*math.floor(car.turboBoost*100)/100-0.3, boostThreshold), inactiveColor= rgbm(0,0,0,0), total=15, active=displayedPressure}
    display.rect{pos= vec2(400,55), size= vec2(5,50), color= rgbm(1,1,1,1)}
    display.text{width=205,pos = vec2(615, 60),alignment=1, letter = vec2(45, 35), spacing = -23,text=string.format("%.2f", 2*math.floor(car.turboBoost*100)/100-0.3), font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(840, 55), letter = vec2(45, 50), spacing = -25,text="kPa", font = "c7_mid", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(810, 55), letter = vec2(17, 30), spacing = -7,text="x100", font = "c7_mid", color= rgbm(1,1,1,1)}

    display.image{image ="MFD.png",pos = vec2(310,57),size = vec2(60,50),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,282/1024),uvEnd = vec2(1530/1536, 374/1024)} --turbo icon
    
    
    --throttle bar --
    --throttle has no max--

    display.horizontalBar{pos= vec2(405,115), size= vec2(285,45), delta=0, activeColor= getBarColor(car.gas*100,throttleTreshold), inactiveColor= rgbm(0,0,0,0), total=100, active=car.gas*100}
    
    display.rect{pos= vec2(400,115), size= vec2(5,50), color= rgbm(1,1,1,1)}
    
    display.text{width=205,pos = vec2(675, 120),alignment=1, letter = vec2(45, 35), spacing = -23,text=string.format("%.1f",car.gas*100), font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(870, 115), letter = vec2(45, 50), spacing = -25,text="%", font = "c7_mid", color= rgbm(1,1,1,1)}
    
    display.image{image ="MFD.png",pos = vec2(310,113),size = vec2(60,50),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,650/1024),uvEnd = vec2(1530/1536, 742/1024)} -- throttle icon

    --idc bar --
    --idc has no max--

    display.horizontalBar{pos= vec2(405,175), size= vec2(285,45), delta=0, activeColor= getBarColor(idcLevel(car.rpm),idcTreshold), inactiveColor= rgbm(0,0,0,0), total=100, active=idcLevel(car.rpm)}
    
    display.rect{pos= vec2(400,175), size= vec2(5,50), color= rgbm(1,1,1,1)}

    display.text{width=205,pos = vec2(675, 180),alignment=1, letter = vec2(45, 35), spacing = -23,text=string.format("%.1f",idcLevel(car.rpm)), font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(870, 175), letter = vec2(45, 50), spacing = -25,text="%", font = "c7_mid", color= rgbm(1,1,1,1)}

    display.image{image ="MFD.png",pos = vec2(310,175),size = vec2(60,50),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,750/1024),uvEnd = vec2(1530/1536, 842/1024)} -- injector icon

    --oil temp bar--

    maxOilTemp = math.max(maxOilTemp,car.oilTemperature)

    display.horizontalBar{pos= vec2(410,235), size= vec2(285,45), delta=0, activeColor= rgbm(1,1,1,1), inactiveColor= rgbm(0,0,0,0), total=150, active=maxOilTemp}
    display.horizontalBar{pos= vec2(405,235), size= vec2(285,45), delta=0, activeColor=rgbm(0,0.01,0.09,1), inactiveColor= rgbm(0,0,0,0), total=150, active=maxOilTemp}
    display.horizontalBar{pos= vec2(405,235), size= vec2(285,45), delta=0, activeColor= getBarColor(car.oilTemperature,oilTreshold), inactiveColor= rgbm(0,0,0,0), total=150, active=car.oilTemperature}
    
    display.rect{pos= vec2(400,235), size= vec2(5,50), color= rgbm(1,1,1,1)}

    display.text{width=205,pos = vec2(670, 240),alignment=1, letter = vec2(45, 35), spacing = -23,text=string.format("%.0f",car.oilTemperature), font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(870, 240), letter = vec2(15, 15), spacing = -25,text="0", font = "c7_mid", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(870, 235), letter = vec2(45, 50), spacing = -25,text="C", font = "c7_mid", color= rgbm(1,1,1,1)}

    display.image{image ="MFD.png",pos = vec2(310,235),size = vec2(60,50),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,370/1024),uvEnd = vec2(1530/1536, 462/1024)} -- oil icon

    --water temp bar--

    maxWaterTemp = math.max(maxWaterTemp,car.waterTemperature)

    display.horizontalBar{pos= vec2(410,295), size= vec2(285,45), delta=0, activeColor= rgbm(1,1,1,1), inactiveColor= rgbm(0,0,0,0), total=150, active=maxWaterTemp}
    display.horizontalBar{pos= vec2(405,295), size= vec2(285,45), delta=0, activeColor=rgbm(0,0.01,0.09,1), inactiveColor= rgbm(0,0,0,0), total=150, active=maxWaterTemp}
    display.horizontalBar{pos= vec2(405,295), size= vec2(285,45), delta=0, getBarColor(car.waterTemperature,waterTreshold), inactiveColor= rgbm(0,0,0,0), total=150, active=car.waterTemperature}
    
    display.rect{pos= vec2(400,300), size= vec2(5,50), color= rgbm(1,1,1,1)}

    display.text{width=205,pos = vec2(670, 300),alignment=1, letter = vec2(45, 35), spacing = -23,text=string.format("%.0f",car.waterTemperature), font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(870, 300), letter = vec2(15, 15), spacing = -25,text="0", font = "c7_mid", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(870, 295), letter = vec2(45, 50), spacing = -25,text="C", font = "c7_mid", color= rgbm(1,1,1,1)}

    display.image{image ="MFD.png",pos = vec2(310,295),size = vec2(60,50),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,190/1024),uvEnd = vec2(1530/1536, 282/1024)} --water icon

    --exhaust temp bar--
    maxExhTemp = math.max(maxExhTemp,car.exhaustTemperature)

    display.horizontalBar{pos= vec2(410,355), size= vec2(285,45), delta=0, activeColor= rgbm(1,1,1,1), inactiveColor= rgbm(0,0,0,0), total=1000, active=maxExhTemp}
    display.horizontalBar{pos= vec2(405,355), size= vec2(285,45), delta=0, activeColor=rgbm(0,0.01,0.09,1), inactiveColor= rgbm(0,0,0,0), total=1000, active=maxExhTemp}
    display.horizontalBar{pos= vec2(405,355), size= vec2(285,45), delta=0, activeColor= getBarColor(car.exhaustTemperature,exhTreshold), inactiveColor= rgbm(0,0,0,0), total=1000, active=car.exhaustTemperature}
    
    display.rect{pos= vec2(400,300), size= vec2(5,50), color= rgbm(1,1,1,1)}
    
    display.text{width=205,pos = vec2(670, 360),alignment=1, letter = vec2(45, 35), spacing = -23,text=string.format("%.0f",car.exhaustTemperature), font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(870, 360), letter = vec2(15, 15), spacing = -25,text="0", font = "c7_mid", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(870, 355), letter = vec2(45, 50), spacing = -25,text="C", font = "c7_mid", color= rgbm(1,1,1,1)}

    display.image{image ="MFD.png",pos = vec2(310,360),size = vec2(60,50),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,850/1024),uvEnd = vec2(1530/1536, 940/1024)} -- exhaust icon
    
    --interior temp bar--

    maxIntTemp = math.max(maxIntTemp,ac.getSimState().ambientTemperature-23)

    display.horizontalBar{pos= vec2(410,415), size= vec2(285,45), delta=0, activeColor= rgbm(1,1,1,1), inactiveColor= rgbm(0,0,0,0), total=10, active=maxIntTemp}
    display.horizontalBar{pos= vec2(405,415), size= vec2(285,45), delta=0, activeColor=rgbm(0,0.01,0.09,1), inactiveColor= rgbm(0,0,0,0), total=10, active=maxIntTemp}
    display.horizontalBar{pos= vec2(405,415), size= vec2(285,45), delta=0, activeColor= getBarColor(ac.getSimState().ambientTemperature,intTreshold), inactiveColor= rgbm(0,0,0,0), total=10, active=ac.getSimState().ambientTemperature-23}
    
    display.rect{pos= vec2(400,415), size= vec2(5,50), color= rgbm(1,1,1,1)}

    display.text{width=205,pos = vec2(670, 420),alignment=1, letter = vec2(45, 35), spacing = -23,text=string.format("%.0f",ac.getSimState().ambientTemperature), font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(870, 420), letter = vec2(15, 15), spacing = -25,text="0", font = "c7_mid", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(870, 415), letter = vec2(45, 50), spacing = -25,text="C", font = "c7_mid", color= rgbm(1,1,1,1)}

    display.image{image ="MFD.png",pos = vec2(310,412),size = vec2(60,50),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,932/1024),uvEnd = vec2(1530/1536, 1024/1024)} -- int icon

end

function drawBarMenu()
    local starterx=60
    local startery=50

    for i = 0, 6 do --drawing the outlines of every bar...
       drawMenuBars(starterx, startery, 860, 55) 
       startery=startery+60
    end
    
    drawBarMenuText(starterx)
    drawBarMenuGreenBars()
end

local leftPivot = vec2(282-40, 226)
local leftPos = vec2(190-40, 230)

local rightPos = vec2(620, 230)
local rightPivot = vec2(703, 226)

local leftOffset = -40
local rightOffset= 425
local maxTurboPercentage = 0
local maxOilPercentage = 0
local maxIDCPercentage = 0
local maxThrottlePercentage = 0
local maxFTorquePercentage = 0
local maxVoltPercentage = 0
local maxExhPercentage = 0
local maxTempPercentage = 0
local mfdSize= vec2(324,380)


function drawIntGauge(sidePivot, sidePos,sideOffset)
    local tempPercentage = ac.getSimState().ambientTemperature
    maxTempPercentage = math.max(maxTempPercentage,tempPercentage)
    local maxRotation = (-maxTempPercentage) * 2.65 --2.65 is the rotation deg /100

    for i = 1, 80 do
        local thisRotation = (-tempPercentage) * 2.65 -- "-" turns rotation counter clockwise
        ui.beginRotation()
        ui.beginRotation()
        display.rect {
            -- draws rectangle
            pos = sidePos,
            size = vec2(21, 120),
            color = rgbm(0,1,0,1)
        }
        if i==80 then
            display.rect {
                -- draws rectangle
                pos = sidePos,
                size = vec2(7, 120),
                color = rgbm(1,0,0,1)
            }
        end
        ui.endRotation(35)
        if tempPercentage > (100 / 80 * i) then
            thisRotation = -(100 / 80 * i) * 2.65
        end
        
        ui.endPivotRotation(thisRotation + 142, sidePivot)

        ui.beginRotation()
        ui.beginRotation()
        display.rect {
            -- draws rectangle
            pos = vec2(sidePos.x+5, sidePos.y-5),
            size = vec2(7, 115),
            color = rgbm(1,1,1,1)
        }
        ui.endRotation(35)
        ui.endPivotRotation(maxRotation + 140, sidePivot)
    end

    display.image{image ="MFD.png",pos = vec2(sideOffset+125,70),size = mfdSize,color = rgbm(1,1,1,1), uvStart = vec2(0,520/1024),uvEnd = vec2(435/1536, 1024/1024)} --3rd gauge
    
    maxIntTemp = math.max(maxIntTemp,ac.getSimState().ambientTemperature)

    display.text{width=205,pos = vec2(sideOffset+230, 318),alignment=1, letter = vec2(60, 50), spacing = -35,text=math.floor(maxIntTemp), font = "Microsquare", color= rgbm(0,0,0,1)}
    display.text{width=205,pos = vec2(sideOffset+230, 315),alignment=1, letter = vec2(60, 50), spacing = -35,text=math.floor(maxIntTemp), font = "Microsquare", color= rgbm(1,1,1,1)}
    
    display.text{pos = vec2(sideOffset+230, 390), letter = vec2(50,40), spacing = -29,text="0", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+140, 360), letter = vec2(50,40), spacing = -29,text="10", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+80, 300), letter = vec2(50,40), spacing = -29,text="20", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+55, 220), letter = vec2(50,40), spacing = -29,text="30", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+65, 140), letter = vec2(50,40), spacing = -29,text="40", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+110, 75), letter = vec2(50,40), spacing = -29,text="50", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+180, 30), letter = vec2(50,40), spacing = -29,text="60", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+260, 25), letter = vec2(50,40), spacing = -29,text="70", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+350,60), letter = vec2(50,40), spacing = -29,text="80", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+400,120), letter = vec2(50,40), spacing = -29,text="90", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+410,200), letter = vec2(50,40), spacing = -29,text="100", font = "Microsquare", color= rgbm(1,1,1,1)}
end

function drawExhGauge(sidePivot, sidePos, sideOffset)
    local exhPercentage = (car.exhaustTemperature*100)/1000 -- conversion to %
    maxExhPercentage = math.max(maxExhPercentage,exhPercentage)
    local maxRotation = (-maxExhPercentage) * 2.65 --2.65 is the rotation deg /100

    for i = 1, 80 do
        local thisRotation = (-exhPercentage) * 2.65 -- "-" turns rotation counter clockwise
        ui.beginRotation()
        ui.beginRotation()
        display.rect {
            -- draws rectangle
            pos = sidePos,
            size = vec2(21, 120),
            color = rgbm(0,1,0,1)
        }
        if i==80 then
            display.rect {
                -- draws rectangle
                pos = sidePos,
                size = vec2(7, 120),
                color = rgbm(1,0,0,1)
            }
        end
        ui.endRotation(35)
        if exhPercentage > (100 / 80 * i) then
            thisRotation = -(100 / 80 * i) * 2.65
        end
        
        ui.endPivotRotation(thisRotation + 142, sidePivot)

        ui.beginRotation()
        ui.beginRotation()
        display.rect {
            -- draws rectangle
            pos = vec2(sidePos.x+5, sidePos.y-5),
            size = vec2(7, 115),
            color = rgbm(1,1,1,1)
        }
        ui.endRotation(35)
        ui.endPivotRotation(maxRotation + 141, sidePivot)
    end

    display.image{image ="MFD.png",pos = vec2(sideOffset+125,70),size = mfdSize,color = rgbm(1,1,1,1), uvStart = vec2(0,520/1024),uvEnd = vec2(435/1536, 1024/1024)} --3rd gauge
  

    maxExhTemp = math.max(maxExhTemp,car.exhaustTemperature)

    display.text{width=205,pos = vec2(sideOffset+230, 318),alignment=1, letter = vec2(60, 50), spacing = -35,text=math.floor(maxExhTemp), font = "Microsquare", color= rgbm(0,0,0,1)}
    display.text{width=205,pos = vec2(sideOffset+230, 315),alignment=1, letter = vec2(60, 50), spacing = -35,text=math.floor(maxExhTemp), font = "Microsquare", color= rgbm(1,1,1,1)}
    
    display.text{pos = vec2(sideOffset+250, 385), letter = vec2(45,35), spacing = -25,text="0", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+130, 365), letter = vec2(45,35), spacing = -25,text="100", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+60, 285), letter = vec2(45,35), spacing = -25,text="200", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+46, 215), letter = vec2(45,35), spacing = -25,text="300", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+55, 145), letter = vec2(45,35), spacing = -25,text="400", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+95, 90), letter = vec2(45,35), spacing = -25,text="500", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+170, 45), letter = vec2(45,35), spacing = -25,text="600", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+255, 35), letter = vec2(45,35), spacing = -25,text="700", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+355, 65), letter = vec2(45,35), spacing = -25,text="800", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+405, 130), letter = vec2(45,35), spacing = -25,text="900", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+415, 205), letter = vec2(45,35), spacing = -25,text="1000", font = "Microsquare", color= rgbm(1,1,1,1)}
end

function drawVoltGauge(sidePivot, sidePos, sideOffset)
    local voltPercentage = (((car.batteryVoltage-8)*100)/8) -- conversion to %
    maxVoltPercentage = math.max(maxVoltPercentage,voltPercentage)
    local maxRotation = (-maxVoltPercentage) * 2.3 --2.3 is the rotation deg /100
    
    for i = 1, 40 do
        local thisRotation = (-voltPercentage) * 2.3 -- "-" turns rotation counter clockwise
        ui.beginRotation()
        ui.beginRotation()
        display.rect {pos = sidePos,size = vec2(16, 120),color = rgbm(0,1,0,1)}
        if i==40 then
            display.rect {pos = sidePos,size = vec2(7, 120),color = rgbm(1,0,0,1)}
        end
        ui.endRotation(35)
        if voltPercentage > (100 / 40 * i) then
            thisRotation = -(100 / 40 * i) * 2.3
        end
        
        ui.endPivotRotation(thisRotation + 140, sidePivot)

        ui.beginRotation()
        ui.beginRotation()
        display.rect {pos = vec2(sidePos.x+5, sidePos.y-5),size = vec2(7, 120),color = rgbm(1,1,1,1)}
        ui.endRotation(35)
        ui.endPivotRotation(maxRotation + 138, sidePivot)
    end

    display.image{image ="MFD.png",pos = vec2(sideOffset+128,70),size = mfdSize,color = rgbm(1,1,1,1), uvStart = vec2(895/1536,523/1024),uvEnd = vec2(1335/1536,1024/1024)} --1st gauge
    display.image{image ="MFD.png",pos = vec2(sideOffset+310,235),size=vec2(90,70),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,550/1024),uvEnd = vec2(1530/1536, 642/1024)} -- volt icon

    maxVoltage = math.max(maxVoltage,car.batteryVoltage)

    display.text{width=205,pos = vec2(sideOffset+240, 318),alignment=1, letter = vec2(60, 50), spacing = -35,text=string.format("%.1f", maxVoltage), font = "Microsquare", color= rgbm(0,0,0,1)}
    display.text{width=205,pos = vec2(sideOffset+238, 315),alignment=1, letter = vec2(60, 50), spacing = -35,text=string.format("%.1f", maxVoltage), font = "Microsquare", color= rgbm(1,1,1,1)}

    display.text{pos = vec2(sideOffset+245, 385), letter = vec2(50,40), spacing = -30,text="8", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+140, 355), letter = vec2(50,40), spacing = -30,text="9", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+70, 290), letter = vec2(50,40), spacing = -30,text="10", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+55, 200), letter = vec2(50,40), spacing = -30,text="11", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+80, 100), letter = vec2(50,40), spacing = -30,text="12", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+145, 45), letter = vec2(50,40), spacing = -30,text="13", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+235, 25), letter = vec2(50,40), spacing = -30,text="14", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+320, 50), letter = vec2(50,40), spacing = -30,text="15", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+380, 100), letter = vec2(50,40), spacing = -30,text="16", font = "Microsquare", color= rgbm(1,1,1,1)}

end


function drawFTorqueGauge(sidePivot, sidePos,sideOffset)
    local torquePercentage = car.drivetrainTorque/6 -- conversion to %
    maxFTorquePercentage = math.max(maxFTorquePercentage,torquePercentage)
    local maxRotation = (-maxFTorquePercentage) * 2.5 --2.5 is the rotation deg /100

    for i = 1, 80 do
        local thisRotation = (-torquePercentage) * 2.5 -- "-" turns rotation counter clockwise
        ui.beginRotation()
        ui.beginRotation()
        display.rect {pos = sidePos,size = vec2(21, 120),color = rgbm(0,1,0,1)}
        if i==80 then
            display.rect {pos = sidePos,size = vec2(7, 120),color = rgbm(1,0,0,1)}
        end
        ui.endRotation(35)
        if torquePercentage > (100 / 80 * i) then
            thisRotation = -(100 / 80 * i) * 2.5
        end
        
        ui.endPivotRotation(thisRotation + 138, sidePivot)

        ui.beginRotation()
        ui.beginRotation()
        display.rect {pos = vec2(sidePos.x+5, sidePos.y-5),size = vec2(7, 115),color = rgbm(1,1,1,1)}
        ui.endRotation(35)
        ui.endPivotRotation(maxRotation + 137, sidePivot)
    end

    display.image{image ="MFD.png",pos = vec2(sideOffset+128,70),size = mfdSize,color = rgbm(1,1,1,1), uvStart = vec2(0,0),uvEnd = vec2(435/1536, 506/1024)} --1st gauge
    display.image{image ="MFD.png",pos = vec2(sideOffset+310,235),size=vec2(90,70),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,450/1024),uvEnd = vec2(1530/1536, 542/1024)} -- torque icon
    
    display.text{width=205,pos = vec2(sideOffset+245, 318),alignment=1, letter = vec2(60, 50), spacing = -35,text= math.floor(maxFTorquePercentage), font = "Microsquare", color= rgbm(0,0,0,1)}
    display.text{width=205,pos = vec2(sideOffset+242, 315),alignment=1, letter = vec2(60, 50), spacing = -35,text= math.floor(maxFTorquePercentage), font = "Microsquare", color= rgbm(1,1,1,1)}
    
    display.text{pos = vec2(sideOffset+245, 380), letter = vec2(60, 50), spacing = -35,text="0", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+165, 355), letter = vec2(60, 50), spacing = -35,text="2", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+80, 250), letter = vec2(60, 50), spacing = -35,text="4", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+85, 150), letter = vec2(60, 50), spacing = -35,text="6", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+110, 90), letter = vec2(60, 50), spacing = -35,text="8", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+145, 45), letter = vec2(60, 50), spacing = -35,text="10", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+215, 25), letter = vec2(60, 50), spacing = -35,text="15", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+285, 30), letter = vec2(60, 50), spacing = -35,text="20", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+345, 52), letter = vec2(60, 50), spacing = -35,text="25", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+385, 92), letter = vec2(60, 50), spacing = -35,text="30", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+410, 150), letter = vec2(60, 50), spacing = -35,text="40", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+415, 200), letter = vec2(60, 50), spacing = -35,text="50", font = "Microsquare", color= rgbm(1,1,1,1)}

end

function drawThrottleGauge(sidePivot, sidePos, sideOffset)
    local throttlePercentage = (car.gas*100) -- conversion to %

    for i = 1, 80 do
        local thisRotation = (-throttlePercentage) * 2.25 -- "-" turns rotation counter clockwise
        ui.beginRotation()
        ui.beginRotation()
        display.rect {
            -- draws rectangle
            pos = sidePos,
            size = vec2(21, 120),
            color = rgbm(0,1,0,1)
        }
        if i==80 then
            display.rect {
                -- draws rectangle
                pos = sidePos,
                size = vec2(7, 120),
                color = rgbm(1,0,0,1)
            }
        end
        ui.endRotation(35)
        if throttlePercentage > (100 / 80 * i) then
            thisRotation = -(100 / 80 * i) * 2.25
        end
        
        ui.endPivotRotation(thisRotation + 141, sidePivot)

    end

    
    display.image{image ="MFD.png",pos = vec2(sideOffset+125,70),size = mfdSize,color = rgbm(1,1,1,1), uvStart = vec2(440/1536,0),uvEnd = vec2(872/1536, 506/1024)} --2nd gauge
    display.image{image ="MFD.png",pos = vec2(sideOffset+310,235),size=vec2(90,70),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,650/1024),uvEnd = vec2(1530/1536, 742/1024)} -- throttle icon
    display.text{pos = vec2(sideOffset+245, 380), letter = vec2(60, 50), spacing = -35,text="0", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+105, 335), letter = vec2(60, 50), spacing = -35,text="20", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+50, 200), letter = vec2(60, 50), spacing = -35,text="40", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+100, 75), letter = vec2(60, 50), spacing = -35,text="60", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+240, 25), letter = vec2(60, 50), spacing = -35,text="80", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+370, 80), letter = vec2(60, 50), spacing = -35,text="100", font = "Microsquare", color= rgbm(1,1,1,1)}

end

function drawInjectorGauge(sidePivot, sidePos, sideOffset)
    
    local idcPercentage = idcLevel(car.rpm) -- conversion to %
    local thisRotation = (-idcPercentage) * 2.25 -- "-" turns rotation counter clockwise
    
    for i = 1, 80 do
        
        ui.beginRotation()
        ui.beginRotation()


        display.rect {
            -- draws rectangle
            pos = sidePos,
            size = vec2(20, 120),
            color = rgbm(0,1,0,1)
        }
        if i==80 then
            display.rect {
                -- draws rectangle
                pos = sidePos,
                size = vec2(7, 120),
                color = rgbm(1,0,0,1)
            }
        end
        ui.endRotation(35)

        if idcPercentage > (100 / 80 * i) then
            thisRotation = -(100 / 80 * i) * 2.25
        end

        ui.endPivotRotation(thisRotation + 144,sidePivot)

    end

    display.image{image ="MFD.png",pos = vec2(sideOffset+125,70),size = mfdSize,color = rgbm(1,1,1,1), uvStart = vec2(440/1536,0),uvEnd = vec2(872/1536, 506/1024)} --2nd gauge
    display.image{image ="MFD.png",pos = vec2(sideOffset+330,240),size = vec2(90,70),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,750/1024),uvEnd = vec2(1530/1536, 842/1024)} -- injector icon
    display.text{pos = vec2(sideOffset+245, 380), letter = vec2(60, 50), spacing = -35,text="0", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+105, 335), letter = vec2(60, 50), spacing = -35,text="20", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+50, 200), letter = vec2(60, 50), spacing = -35,text="40", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+100, 75), letter = vec2(60, 50), spacing = -35,text="60", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+240, 25), letter = vec2(60, 50), spacing = -35,text="80", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+370, 80), letter = vec2(60, 50), spacing = -35,text="100", font = "Microsquare", color= rgbm(1,1,1,1)}

end

function drawTurboGauge(sidePivot, sidePos, sideOffset)
    
    local turboPercentage = ((car.turboBoost+0.32)*0.689 * 100) -- conversion to %
    local thisRotation = (-turboPercentage) * 2.8 -- "-" turns rotation counter clockwise
    maxTurboPercentage = math.max(maxTurboPercentage,turboPercentage)
    local maxRotation = (-maxTurboPercentage+1) * 2.8

     
    
    for i = 1, 40 do
        
        
        ui.beginRotation()
        ui.beginRotation()

        
        display.rect {
            -- draws rectangle
            pos = sidePos,
            size = vec2(20, 120),
            color = rgbm(0,1,0,1)
        }
        if i==40 then
            display.rect {
                -- draws rectangle
                pos = sidePos,
                size = vec2(7, 120),
                color = rgbm(1,0,0,1)
            }
        end
        ui.endRotation(35)

        if turboPercentage > (100 / 40 * i) then
            thisRotation = -(100 / 40 * i) * 2.8
        end

        ui.endPivotRotation(thisRotation + 146,sidePivot)
        ui.beginRotation()
        ui.beginRotation()
        display.rect {
            -- draws rectangle
             pos = vec2(sidePos.x+5, sidePos.y-5),
            size = vec2(7, 115),
            color = rgbm(1,1,1,1)
        }
        ui.endRotation(35)
        ui.endPivotRotation(maxRotation + 145.5,sidePivot)
    end

    displayedPressure = 2*(car.turboBoost*100)/100-0.2
    maxBoost = math.max(maxBoost,displayedPressure)


    display.image{image ="MFD.png",pos = vec2(sideOffset+125,70),size = mfdSize,color = rgbm(1,1,1,1), uvStart = vec2(440/1536,520/1024),uvEnd = vec2(872/1536, 1024/1024)} --4th gauge
    display.image{image ="MFD.png",pos = vec2(sideOffset+330,240),size = vec2(90,70),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,282/1024),uvEnd = vec2(1530/1536, 374/1024)} --turbo icon
    
    display.text{width=205,pos = vec2(sideOffset+245, 318),alignment=1, letter = vec2(60, 50), spacing = -35,text=string.format("%.2f", maxBoost), font = "Microsquare", color= rgbm(0,0,0,1)}
    display.text{width=205,pos = vec2(sideOffset+242, 315),alignment=1, letter = vec2(60, 50), spacing = -35,text=string.format("%.2f", maxBoost), font = "Microsquare", color= rgbm(1,1,1,1)}

    display.text{pos = vec2(sideOffset+145, 375), letter = vec2(60, 50), spacing = -42,text="-0.5", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+80, 270), letter = vec2(60, 50), spacing = -42,text="0", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+60, 110), letter = vec2(60, 50), spacing = -42,text="0.5", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+200, 25), letter = vec2(60, 50), spacing = -42,text="1.0", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+355, 60), letter = vec2(60, 50), spacing = -42,text="1.5", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+420, 195), letter = vec2(60, 50), spacing = -42,text="2.0", font = "Microsquare", color= rgbm(1,1,1,1)}
end


function drawOilTempGauge(sidePivot, sidePos, sideOffset)
  
    local oilPercentage = 13+(((car.oilTemperature-80)*100)/80) -- conversion to %
    maxOilPercentage = math.max(maxOilPercentage,oilPercentage)
    local maxOilRotation = (-maxOilPercentage) * 2.3


    for i = 1, 80 do
        local thisRotation = (-oilPercentage) * 2.3 -- "-" turns rotation counter clockwise
        ui.beginRotation()
        ui.beginRotation()
        display.rect {
            -- draws rectangle
            pos = sidePos,
            size = vec2(21, 120),
            color = rgbm(0,1,0,1)
        }
        if i==80 then
            display.rect {
                -- draws rectangle
                pos = sidePos,
                size = vec2(7, 120),
                color = rgbm(1,0,0,1)
            }
        end
        ui.endRotation(35)
        if oilPercentage > (100 / 80 * i) then
            thisRotation = -(100 / 80 * i) * 2.3
        end
        
        ui.endPivotRotation(thisRotation + 143, sidePivot)

        ui.beginRotation()
        ui.beginRotation()
        display.rect {
            -- draws rectangle
            pos = vec2(sidePos.x+5, sidePos.y-5),
            size = vec2(7, 115),
            color = rgbm(1,1,1,1)
        }
        ui.endRotation(35)
        ui.endPivotRotation(maxOilRotation + 144, sidePivot)
    end

    display.image{image ="MFD.png",pos = vec2(sideOffset+125,70),size = mfdSize,color = rgbm(1,1,1,1), uvStart = vec2(889/1536,524/1024),uvEnd = vec2(1324/1536, 1024/1024)} --3rd gauge
    display.image{image ="MFD.png",pos = vec2(sideOffset+330,240),size = vec2(90,70),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,370/1024),uvEnd = vec2(1530/1536, 462/1024)} -- oil icon
    
    maxOilTemp = math.max(maxOilTemp,car.oilTemperature)

    display.text{width=205,pos = vec2(sideOffset+230, 318),alignment=1, letter = vec2(60, 50), spacing = -35,text=math.floor(maxOilTemp), font = "Microsquare", color= rgbm(0,0,0,1)}
    display.text{width=205,pos = vec2(sideOffset+230, 315),alignment=1, letter = vec2(60, 50), spacing = -35,text=math.floor(maxOilTemp), font = "Microsquare", color= rgbm(1,1,1,1)}
    
    display.text{pos = vec2(sideOffset+230, 390), letter = vec2(50,40), spacing = -29,text="70", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+140, 360), letter = vec2(50,40), spacing = -29,text="80", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+70, 280), letter = vec2(50,40), spacing = -29,text="90", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+45, 200), letter = vec2(50,40), spacing = -29,text="100", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+65, 110), letter = vec2(50,40), spacing = -29,text="110", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+120, 55), letter = vec2(50,40), spacing = -29,text="120", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+230, 30), letter = vec2(50,40), spacing = -29,text="130", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+320, 45), letter = vec2(50,40), spacing = -29,text="140", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(sideOffset+390,110), letter = vec2(50,40), spacing = -29,text="150", font = "Microsquare", color= rgbm(1,1,1,1)}

end


local throttleIndex = 1

function fillTable(yVal)
    return {
    vec2(465.0,yVal),vec2(463.85,yVal),vec2(462.7,yVal),vec2(461.55,yVal),vec2(460.4,yVal),vec2(459.25,yVal),vec2(458.1,yVal),vec2(456.95,yVal),vec2(455.8,yVal),vec2(454.65,yVal),
    vec2(453.5,yVal),vec2(452.35,yVal),vec2(451.2,yVal),vec2(450.05,yVal),vec2(448.9,yVal),vec2(447.75,yVal),vec2(446.6,yVal),vec2(445.45,yVal),vec2(444.3,yVal),vec2(443.15,yVal),
    vec2(442.0,yVal),vec2(440.85,yVal),vec2(439.7,yVal),vec2(438.55,yVal),vec2(437.4,yVal),vec2(436.25,yVal),vec2(435.1,yVal),vec2(433.95,yVal),vec2(432.8,yVal),vec2(431.65,yVal),
    vec2(430.5,yVal),vec2(429.35,yVal),vec2(428.2,yVal),vec2(427.05,yVal),vec2(425.9,yVal),vec2(424.75,yVal),vec2(423.6,yVal),vec2(422.45,yVal),vec2(421.3,yVal),vec2(420.15,yVal),
    vec2(419.0,yVal),vec2(417.85,yVal),vec2(416.7,yVal),vec2(415.55,yVal),vec2(414.4,yVal),vec2(413.25,yVal),vec2(412.1,yVal),vec2(410.95,yVal),vec2(409.8,yVal),vec2(408.65,yVal),
    vec2(407.5,yVal),vec2(406.35,yVal),vec2(405.2,yVal),vec2(404.05,yVal),vec2(402.9,yVal),vec2(401.75,yVal),vec2(400.6,yVal),vec2(399.45,yVal),vec2(398.3,yVal),vec2(397.15,yVal),
    vec2(396.0,yVal),vec2(394.85,yVal),vec2(393.7,yVal),vec2(392.55,yVal),vec2(391.4,yVal),vec2(390.25,yVal),vec2(389.1,yVal),vec2(387.95,yVal),vec2(386.8,yVal),vec2(385.65,yVal),
    vec2(384.5,yVal),vec2(383.35,yVal),vec2(382.2,yVal),vec2(381.05,yVal),vec2(379.9,yVal),vec2(378.75,yVal),vec2(377.6,yVal),vec2(376.45,yVal),vec2(375.3,yVal),vec2(374.15,yVal),
    vec2(373.0,yVal),vec2(371.85,yVal),vec2(370.7,yVal),vec2(369.55,yVal),vec2(368.4,yVal),vec2(367.25,yVal),vec2(366.1,yVal),vec2(364.95,yVal),vec2(363.8,yVal),vec2(362.65,yVal),
    vec2(361.5,yVal),vec2(360.35,yVal),vec2(359.2,yVal),vec2(358.05,yVal),vec2(356.9,yVal),vec2(355.75,yVal),vec2(354.6,yVal),vec2(353.45,yVal),vec2(352.3,yVal),vec2(351.15,yVal),
    vec2(350.0,yVal),vec2(348.85,yVal),vec2(347.7,yVal),vec2(346.55,yVal),vec2(345.4,yVal),vec2(344.25,yVal),vec2(343.1,yVal),vec2(341.95,yVal),vec2(340.8,yVal),vec2(339.65,yVal),
    vec2(338.5,yVal),vec2(337.35,yVal),vec2(336.2,yVal),vec2(335.05,yVal),vec2(333.9,yVal),vec2(332.75,yVal),vec2(331.6,yVal),vec2(330.45,yVal),vec2(329.3,yVal),vec2(328.15,yVal),
    vec2(327.0,yVal),vec2(325.85,yVal),vec2(324.7,yVal),vec2(323.55,yVal),vec2(322.4,yVal),vec2(321.25,yVal),vec2(320.1,yVal),vec2(318.95,yVal),vec2(317.8,yVal),vec2(316.65,yVal),
    vec2(315.5,yVal),vec2(314.35,yVal),vec2(313.2,yVal),vec2(312.05,yVal),vec2(310.9,yVal),vec2(309.75,yVal),vec2(308.6,yVal),vec2(307.45,yVal),vec2(306.3,yVal),vec2(305.15,yVal),
    vec2(304.0,yVal),vec2(302.85,yVal),vec2(301.7,yVal),vec2(300.55,yVal),vec2(299.4,yVal),vec2(298.25,yVal),vec2(297.1,yVal),vec2(295.95,yVal),vec2(294.8,yVal),vec2(293.65,yVal),
    vec2(292.5,yVal),vec2(291.35,yVal),vec2(290.2,yVal),vec2(289.05,yVal),vec2(287.9,yVal),vec2(286.75,yVal),vec2(285.6,yVal),vec2(284.45,yVal),vec2(283.3,yVal),vec2(282.15,yVal),
    vec2(281.0,yVal),vec2(279.85,yVal),vec2(278.7,yVal),vec2(277.55,yVal),vec2(276.4,yVal),vec2(275.25,yVal),vec2(274.1,yVal),vec2(272.95,yVal),vec2(271.8,yVal),vec2(270.65,yVal),
    vec2(269.5,yVal),vec2(268.35,yVal),vec2(267.2,yVal),vec2(266.05,yVal),vec2(264.9,yVal),vec2(263.75,yVal),vec2(262.6,yVal),vec2(261.45,yVal),vec2(260.3,yVal),vec2(259.15,yVal),
    vec2(258.0,yVal),vec2(256.85,yVal),vec2(255.7,yVal),vec2(254.55,yVal),vec2(253.4,yVal),vec2(252.25,yVal),vec2(251.1,yVal),vec2(249.95,yVal),vec2(248.8,yVal),vec2(247.65,yVal),
    vec2(246.5,yVal),vec2(245.35,yVal),vec2(244.2,yVal),vec2(243.05,yVal),vec2(241.9,yVal),vec2(240.75,yVal),vec2(239.6,yVal),vec2(238.45,yVal),vec2(237.3,yVal),vec2(236.15,yVal),
    vec2(235.0,yVal),vec2(233.85,yVal),vec2(232.7,yVal),vec2(231.55,yVal),vec2(230.4,yVal),vec2(229.25,yVal),vec2(228.1,yVal),vec2(226.95,yVal),vec2(225.8,yVal),vec2(224.65,yVal),
    vec2(223.5,yVal),vec2(222.35,yVal),vec2(221.2,yVal),vec2(220.05,yVal),vec2(218.9,yVal),vec2(217.75,yVal),vec2(216.6,yVal),vec2(215.45,yVal),vec2(214.3,yVal),vec2(213.15,yVal),
    vec2(212.0,yVal),vec2(210.85,yVal),vec2(209.7,yVal),vec2(208.55,yVal),vec2(207.4,yVal),vec2(206.25,yVal),vec2(205.1,yVal),vec2(203.95,yVal),vec2(202.8,yVal),vec2(201.65,yVal),
    vec2(200.5,yVal),vec2(199.35,yVal),vec2(198.2,yVal),vec2(197.05,yVal),vec2(195.9,yVal),vec2(194.75,yVal),vec2(193.6,yVal),vec2(192.45,yVal),vec2(191.3,yVal),vec2(190.15,yVal),
    vec2(189.0,yVal),vec2(187.85,yVal),vec2(186.7,yVal),vec2(185.55,yVal),vec2(184.4,yVal),vec2(183.25,yVal),vec2(182.1,yVal),vec2(180.95,yVal),vec2(179.8,yVal),vec2(178.65,yVal),
    vec2(177.5,yVal),vec2(176.35,yVal),vec2(175.2,yVal),vec2(174.05,yVal),vec2(172.9,yVal),vec2(171.75,yVal),vec2(170.6,yVal),vec2(169.45,yVal),vec2(168.3,yVal),vec2(167.15,yVal),
    vec2(166.0,yVal),vec2(164.85,yVal),vec2(163.7,yVal),vec2(162.55,yVal),vec2(161.4,yVal),vec2(160.25,yVal),vec2(159.1,yVal),vec2(157.95,yVal),vec2(156.8,yVal),vec2(155.65,yVal),
    vec2(154.5,yVal),vec2(153.35,yVal),vec2(152.2,yVal),vec2(151.05,yVal),vec2(149.9,yVal),vec2(148.75,yVal),vec2(147.6,yVal),vec2(146.45,yVal),vec2(145.3,yVal),vec2(144.15,yVal),
    vec2(143.0,yVal),vec2(141.85,yVal),vec2(140.7,yVal),vec2(139.55,yVal),vec2(138.4,yVal),vec2(137.25,yVal),vec2(136.1,yVal),vec2(134.95,yVal),vec2(133.8,yVal),vec2(132.65,yVal),
    vec2(131.5,yVal),vec2(130.35,yVal),vec2(129.2,yVal),vec2(128.05,yVal),vec2(126.9,yVal),vec2(125.75,yVal),vec2(124.6,yVal),vec2(123.45,yVal),vec2(122.3,yVal),vec2(121.15,yVal)
    }
end


local boostVals = fillTable(390)
setInterval(function()

    boostVals[1].y = 390-(31.5*(math.floor(math.abs(car.turboBoost)*10)))
    
    for i = 1, 298,2 do
        boostVals[i+1].y=boostVals[i].y
        if i==1 then
            boostVals[i].y=boostVals[#boostVals].y
        else
            boostVals[i].y=boostVals[i-1].y
        end
    end
end
,0.1)



function drawTurboGraph()   

    local starterBoost = 2
    
    display.rect {pos = vec2(120,50),size = vec2(2, 350),color = rgbm(1,1,1,1)}
    display.rect {pos = vec2(120,400),size = vec2(350, 2),color = rgbm(1,1,1,1)}
    for i=0, 3 do 
        display.rect {pos = vec2(120+(116*i),50),size = vec2(2, 350),color = rgbm(1,1,1,0.1)}
        display.rect {pos = vec2(120+(115*i),405),size = vec2(5, 20),color = rgbm(1,1,1,1)}
    end

    display.text{pos = vec2(441, 425), letter = vec2(45,35), spacing = -25,text="0", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(317, 425), letter = vec2(45,35), spacing = -25,text="10", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(200, 425), letter = vec2(45,35), spacing = -25,text="20", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(87, 425), letter = vec2(45,35), spacing = -25,text="30", font = "Microsquare", color= rgbm(1,1,1,1)}

    for i=0, 5 do
        display.text{width=90,alignment=1,pos = vec2(20,58+(60*i)), letter = vec2(40,30), spacing = -30,text=starterBoost, font = "Microsquare", color= rgbm(1,1,1,1)}
        starterBoost = starterBoost - 0.5
        display.rect {pos = vec2(108,73+(60*i)),size = vec2(10, 5),color = rgbm(1,1,1,1)}
    end

    for i = 0, 30 do
        display.rect {pos = vec2(120,75+(10*i)),size = vec2(350, 2),color = rgbm(1,1,1,0.1)}
        display.rect {pos = vec2(115,73+(10*i)),size = vec2(4, 4),color = rgbm(1,1,1,1)}
    end
 
    for i = 3, 300 do
        ui.drawLine(boostVals[i-1], boostVals[i], rgbm(0,1,0,1),1)
        
        
    end
 
end

local throttleVals = fillTable(399)
setInterval(function()
    throttleVals[1].y = 399-(324*car.gas)   
    for i = 1, 298,2 do
        throttleVals[i+1].y=throttleVals[i].y
        if i==1 then
            throttleVals[i].y=throttleVals[#throttleVals].y
        else
            throttleVals[i].y=throttleVals[i-1].y
        end
    end
end
,0.1)

function drawThrottleGraph()   

    local starterThrottle = 100
    
    display.rect {pos = vec2(120,50),size = vec2(2, 350),color = rgbm(1,1,1,1)}
    display.rect {pos = vec2(120,400),size = vec2(350, 2),color = rgbm(1,1,1,1)}
    for i=0, 3 do 
        display.rect {pos = vec2(120+(116*i),50),size = vec2(2, 350),color = rgbm(1,1,1,0.1)}
        display.rect {pos = vec2(120+(115*i),405),size = vec2(5, 20),color = rgbm(1,1,1,1)}
    end

    display.text{pos = vec2(441, 425), letter = vec2(45,35), spacing = -25,text="0", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(317, 425), letter = vec2(45,35), spacing = -25,text="10", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(200, 425), letter = vec2(45,35), spacing = -25,text="20", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(87, 425), letter = vec2(45,35), spacing = -25,text="30", font = "Microsquare", color= rgbm(1,1,1,1)}

    for i=0, 5 do
        display.text{width=90,alignment=1,pos = vec2(20,58+(64.9*i)), letter = vec2(40,30), spacing = -22,text=starterThrottle, font = "Microsquare", color= rgbm(1,1,1,1)}
        starterThrottle = starterThrottle - 20
        display.rect {pos = vec2(108,73+(64.9*i)),size = vec2(10, 5),color = rgbm(1,1,1,1)}
    end

    for i = 0, 5 do
        display.rect {pos = vec2(120,75+(64.9*i)),size = vec2(350, 2),color = rgbm(1,1,1,0.1)} 
    end
 
    for i = 3, 300 do
        ui.drawLine(throttleVals[i-1], throttleVals[i], rgbm(0,1,0,1),1)
        
    end 
end

local idcVals = fillTable(399)
setInterval(function()
    idcVals[1].y = 399-(3.24*idcLevel(car.rpm))   
    for i = 1, 298,2 do
        idcVals[i+1].y=idcVals[i].y
        if i==1 then
            idcVals[i].y=idcVals[#idcVals].y
        else
            idcVals[i].y=idcVals[i-1].y
        end
    end
end
,0.1)

function drawIDCGraph()   

    local starterIDC = 100
    
    display.rect {pos = vec2(120,50),size = vec2(2, 350),color = rgbm(1,1,1,1)}
    display.rect {pos = vec2(120,400),size = vec2(350, 2),color = rgbm(1,1,1,1)}
    for i=0, 3 do 
        display.rect {pos = vec2(120+(116*i),50),size = vec2(2, 350),color = rgbm(1,1,1,0.1)}
        display.rect {pos = vec2(120+(115*i),405),size = vec2(5, 20),color = rgbm(1,1,1,1)}
    end

    display.text{pos = vec2(441, 425), letter = vec2(45,35), spacing = -25,text="0", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(317, 425), letter = vec2(45,35), spacing = -25,text="10", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(200, 425), letter = vec2(45,35), spacing = -25,text="20", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(87, 425), letter = vec2(45,35), spacing = -25,text="30", font = "Microsquare", color= rgbm(1,1,1,1)}

    for i=0, 5 do
        display.text{width=90,alignment=1,pos = vec2(20,58+(64.9*i)), letter = vec2(40,30), spacing = -22,text=starterIDC, font = "Microsquare", color= rgbm(1,1,1,1)}
        starterIDC = starterIDC - 20
        display.rect {pos = vec2(108,73+(64.9*i)),size = vec2(10, 5),color = rgbm(1,1,1,1)}
    end

    for i = 0, 5 do
        display.rect {pos = vec2(120,75+(64.9*i)),size = vec2(350, 2),color = rgbm(1,1,1,0.1)}   
    end
    
    for i = 0, 4 do
        display.rect {pos = vec2(112,107.5+(64.9*i)),size = vec2(6, 3),color = rgbm(1,1,1,1)}
    end

    for i = 3, 300 do
        ui.drawLine(idcVals[i-1], idcVals[i], rgbm(0,1,0,1),1)
        
    end 
end

local voltVals = fillTable(399)
setInterval(function()
   
    voltVals[1].y = 399-(3.24*(((car.batteryVoltage-8)*100)/8))   
    for i = 1, 298,2 do
        voltVals[i+1].y=voltVals[i].y
        if i==1 then
            voltVals[i].y=voltVals[#voltVals].y
        else
            voltVals[i].y=voltVals[i-1].y
        end
    end
end
,0.1)

function drawVoltGraph()   

    local starterVolt = 16
    
    display.rect {pos = vec2(120,50),size = vec2(2, 350),color = rgbm(1,1,1,1)}
    display.rect {pos = vec2(120,400),size = vec2(350, 2),color = rgbm(1,1,1,1)}
    for i=0, 3 do 
        display.rect {pos = vec2(120+(116*i),50),size = vec2(2, 350),color = rgbm(1,1,1,0.1)}
        display.rect {pos = vec2(120+(115*i),405),size = vec2(5, 20),color = rgbm(1,1,1,1)}
    end

    display.text{pos = vec2(441, 425), letter = vec2(45,35), spacing = -25,text="0", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(317, 425), letter = vec2(45,35), spacing = -25,text="10", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(200, 425), letter = vec2(45,35), spacing = -25,text="20", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(87, 425), letter = vec2(45,35), spacing = -25,text="30", font = "Microsquare", color= rgbm(1,1,1,1)}

    for i=0, 8 do
        display.text{width=90,alignment=1,pos = vec2(20,58+(40.5*i)), letter = vec2(40,30), spacing = -22,text=starterVolt, font = "Microsquare", color= rgbm(1,1,1,1)}
        starterVolt = starterVolt - 1
        display.rect {pos = vec2(108,73+(40.5*i)),size = vec2(10, 5),color = rgbm(1,1,1,1)}
    end

    for i = 0, 8 do
        display.rect {pos = vec2(120,75+(40.5*i)),size = vec2(350, 2),color = rgbm(1,1,1,0.1)}   
    end
    
    for i = 0, 7 do
        display.rect {pos = vec2(112,95.25+(40.5*i)),size = vec2(6, 3),color = rgbm(1,1,1,1)}
    end

    for i = 3, 300 do
        ui.drawLine(voltVals[i-1], voltVals[i], rgbm(0,1,0,1),1)
        
    end 
end

local displayMesh = display.interactiveMesh{ mesh = "INT_BUTTON_NM", resolution = vec2(512, 512)}
local displayMesh2 = display.interactiveMesh{ mesh = "INT_BUTTONS", resolution = vec2(512, 512)}
local btnMode = displayMesh2.clicked(vec2(423, 34),vec2(63, 24))
local btnMenu = displayMesh2.clicked(vec2(118, 246),vec2(63, 26))
local btnRight = displayMesh.clicked(vec2(229, 241),vec2(28, 25))
local btnLeft = displayMesh.clicked(vec2(226, 112),vec2(34, 32))
local btnDown = displayMesh.clicked(vec2(165, 177),vec2(32, 25))
local btnUp = displayMesh.clicked(vec2(291, 177),vec2(28, 27))
local btnMid = displayMesh.clicked(vec2(216, 164),vec2(54, 54))

local modeNumber = 3
local isMenu3Active = false
local selectedMode3 = {{1,0,0,0},{0,0,0,0}}
local activeMode3 = {{"BOOST","OIL-TEMP","F-TORQUE","VOLT"},{"THROTTLE","INJECTOR","EXH-TEMP","INT-TEMP"}}
local currentActive = "BOOST"


function drawSelectMenu()
    display.text{pos = vec2(40, 5), letter = vec2(65,45), spacing = -32,text="SELECT", font = "Microsquare", color= rgbm(1,1,1,1)}
    ui.drawRect(vec2(-170+(220*1),-121+(1*215)),vec2(8+(220*1),49+(1*215)),rgbm(1,1,0,1),10,15,15)

    if btnDown() or btnUp() or btnRight() or btnLeft() then    
        for j=1,2 do
            
            for i=1,4 do  
                if selectedMode3[j][i] == 1 then
                    if btnDown() then 
                        if j == 1 then
                            selectedMode3[j+1][i] = 1    
                        else
                            selectedMode3[j-1][i] = 1
                        end
                          
                    elseif btnUp() then  
                        if j== 1 then
                            selectedMode3[j+1][i] = 1  
                        else
                            selectedMode3[j-1][i] = 1 
                        end
                          
                        
                    elseif btnRight() then 
                        if i== 4 then
                            selectedMode3[j][1] = 1       
                        else
                            selectedMode3[j][i+1] = 1       
                        end
                          
                    elseif btnLeft() then     
                        if i== 1 then
                            selectedMode3[j][4] = 1        
                        else
                            selectedMode3[j][i-1] = 1
                        end
                               
                    end
                    selectedMode3[j][i] = 0  
                    goto continue
                end
            end
        end
    end

    ::continue::
    
    for i=1,4 do
        for j=1,2 do
            if selectedMode3[j][i] == 1 then
                ui.drawRect(vec2(-170+(220*i),-121+(j*215)),vec2(8+(220*i),49+(j*215)),rgbm(1,1,0,1),10,15,15)
            elseif selectedMode3[j][i] == 0 then
                ui.drawRect(vec2(-170+(220*i),-121+(j*215)),vec2(8+(220*i),49+(j*215)),rgbm(0,0.01,0.09,1),10,15,20)
            end
            display.image{image ="MFD.png",pos = vec2(-170+(220*i),-125+(j*215)),size = vec2(185,175),color = rgbm(1,1,1,1), uvStart = vec2(1356/1536,0/1024),uvEnd = vec2(1540/1536, 179/1024)}       
        end
    end


    if btnMid() then
        for i=1,4 do
            for j=1,2 do
                if selectedMode3[j][i] == 1 then
                    currentActive = activeMode3[j][i]
                    isMenu3Active = false
                end
            end
        end
    end

    display.text{pos = vec2(55+(220*0),50+(0*215)), letter = vec2(55,40), spacing = -27,text="BOOST", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(40+(220*1),50+(0*215)), letter = vec2(50,40), spacing = -27,text="OIL-TEMP", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(35+(220*2),50+(0*215)), letter = vec2(50,40), spacing = -27,text="F-TORQUE", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(70+(220*3),50+(0*215)), letter = vec2(55,40), spacing = -27,text="VOLT", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(30+(220*0),50+(1*215)), letter = vec2(50,40), spacing = -27,text="THROTTLE", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(30+(220*1),50+(1*215)), letter = vec2(50,40), spacing = -27,text="INJECTOR", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(35+(220*2),50+(1*215)), letter = vec2(50,40), spacing = -27,text="EXH-TEMP", font = "Microsquare", color= rgbm(1,1,1,1)}
    display.text{pos = vec2(30+(220*3),50+(1*215)), letter = vec2(50,40), spacing = -27,text="INT-TEMP", font = "Microsquare", color= rgbm(1,1,1,1)}
    
    display.image{image ="MFD.png",pos = vec2(100,150),size = vec2(85,70),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,282/1024),uvEnd = vec2(1530/1536, 374/1024)} --turbo icon
    display.image{image ="MFD.png",pos = vec2(320,145),size = vec2(85,70),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,370/1024),uvEnd = vec2(1530/1536, 462/1024)} -- oil icon
    display.image{image ="MFD.png",pos = vec2(538,140),size=vec2(85,70),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,450/1024),uvEnd = vec2(1530/1536, 542/1024)} -- torque icon
    display.image{image ="MFD.png",pos = vec2(753,142),size=vec2(90,70),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,550/1024),uvEnd = vec2(1530/1536, 642/1024)} -- battery icon
    display.image{image ="MFD.png",pos = vec2(95,360),size = vec2(85,70),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,650/1024),uvEnd = vec2(1530/1536, 742/1024)} -- throttle icon
    display.image{image ="MFD.png",pos = vec2(316,360),size = vec2(85,70),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,750/1024),uvEnd = vec2(1530/1536, 842/1024)} -- injector icon
    display.image{image ="MFD.png",pos = vec2(540,365),size = vec2(85,70),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,850/1024),uvEnd = vec2(1530/1536, 940/1024)} -- exhaust icon
    display.image{image ="MFD.png",pos = vec2(752,355),size = vec2(85,70),color = rgbm(1,1,1,1), uvStart = vec2(1416/1536,932/1024),uvEnd = vec2(1530/1536, 1024/1024)} -- int icon
    
end

function drawGraph()
    if currentActive == "BOOST" then
        drawTurboGauge(rightPivot,rightPos,rightOffset)
        drawTurboGraph()
    elseif currentActive == "THROTTLE" then
        drawThrottleGauge(rightPivot,rightPos,rightOffset)
        drawThrottleGraph()
    elseif currentActive == "INJECTOR" then
        drawInjectorGauge(rightPivot,rightPos,rightOffset)
        drawIDCGraph()
    elseif currentActive == "VOLT" then
        drawVoltGauge(rightPivot,rightPos, rightOffset)
        drawVoltGraph()
    else
        drawTurboGauge(rightPivot,rightPos,rightOffset)
        drawTurboGraph()
    end
end

function modeBehaviour()
    if btnMode() then
        modeNumber = modeNumber+1
    end 
    if modeNumber == 3 then
        if btnMenu() then
            isMenu3Active = not isMenu3Active
        end
        if isMenu3Active then
            drawSelectMenu()
        else
            drawGraph()
        end
        
    end
end

function update(dt)
    display.rect{pos= vec2(0,0), size= vec2(940,490), color= rgbm(0,0.01,0.09,1)}
    
    --drawTurboGauge(rightPivot,rightPos,rightOffset)
    --drawTurboGraph()
    
    --drawThrottleGauge(rightPivot,rightPos,rightOffset)
    --drawThrottleGraph()

    --drawInjectorGauge(rightPivot,rightPos,rightOffset)
    --drawIDCGraph()

    --drawVoltGauge(rightPivot,rightPos, rightOffset)
    --drawVoltGraph()

    --drawBarMenu()

    --drawOilTempGauge(leftPivot,leftPos, leftOffset)

    --drawFTorqueGauge(rightPivot,rightPos,rightOffset)


    --drawExhGauge(rightPivot,rightPos,rightOffset)
    
    --drawIntGauge(leftPivot,leftPos,leftOffset)
    
    
    modeBehaviour()



end

'